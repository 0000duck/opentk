<?xml version="1.0" encoding="UTF-8" ?>
<signatures version="2"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="../../../overrides.xsd">

  <!-- KHR_compute_shader -->

  <add name="gles2" version="3.1">
    <enum name="BufferTarget">
      <use token="DISPATCH_INDIRECT_BUFFER"/>
    </enum>
    <enum name="GetProgramParameterName">
      <use token="COMPUTE_WORK_GROUP_SIZE" />
    </enum>
    <enum name="GetPName">
      <use token="DISPATCH_INDIRECT_BUFFER_BINDING"/>
      <use token="MAX_COMPUTE_UNIFORM_BLOCKS"/>
      <use token="MAX_COMPUTE_TEXTURE_IMAGE_UNITS"/>
      <use token="MAX_COMPUTE_IMAGE_UNIFORMS"/>
      <use token="MAX_COMPUTE_SHARED_MEMORY_SIZE"/>
      <use token="MAX_COMPUTE_UNIFORM_COMPONENTS"/>
      <use token="MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS"/>
      <use token="MAX_COMPUTE_ATOMIC_COUNTERS"/>
      <use token="MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS"/>
      <use token="MAX_COMPUTE_WORK_GROUP_INVOCATIONS"/>
      <use token="MAX_COMPUTE_WORK_GROUP_COUNT"/>
      <use token="MAX_COMPUTE_WORK_GROUP_SIZE"/>
    </enum>
    <enum name="ProgramStageMask">
      <use token="COMPUTE_SHADER_BIT" />
    </enum>
    <enum name="ShaderType">
      <use token="COMPUTE_SHADER" />
    </enum>
  </add>

  <!-- KHR_draw_indirect -->

  <replace name="gles2" version="3.1">
    <function name="DrawArraysIndirect">
      <param name="mode"><type>PrimitiveType</type></param>
    </function>
    <function name="DrawElementsIndirect">
      <param name="mode"><type>PrimitiveType</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="BufferTarget">
      <use token="DRAW_INDIRECT_BUFFER" />
    </enum>
    <enum name="GetPName">
      <use token="DRAW_INDIRECT_BUFFER_BINDING" />
    </enum>
  </add>

  <!-- KHR_explicit_uniform_location -->

  <add name="gles2" version="3.1">
    <enum name="GetPName">
      <use token="MAX_UNIFORM_LOCATIONS"/>
    </enum>
  </add>

  <!-- KHR_framebuffer_no_attachments -->

  <replace name="gles2" version="3.1">
    <function name="FramebufferParameter">
      <param name="target"><type>FramebufferTarget</type></param>
      <param name="pname"><type>FramebufferDefaultParameter</type></param>
    </function>
    <function name="GetFramebufferParameteriv">
      <param name="target"><type>FramebufferTarget</type></param>
      <param name="pname"><type>FramebufferDefaultParameter</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="FramebufferDefaultParameter">
      <use token="FRAMEBUFFER_DEFAULT_WIDTH"/>
      <use token="FRAMEBUFFER_DEFAULT_HEIGHT"/>
      <use token="FRAMEBUFFER_DEFAULT_SAMPLES"/>
      <use token="FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS"/>
    </enum>
    <enum name="GetPName">
      <use token="MAX_FRAMEBUFFER_WIDTH"/>
      <use token="MAX_FRAMEBUFFER_HEIGHT"/>
      <use token="MAX_FRAMEBUFFER_SAMPLES"/>
    </enum>
  </add>

  <!-- KHR_program_interface_queries -->

  <replace name="gles2" version="3.1">
    <function name="GetProgramInterfaceiv">
      <param name="programInterface"><type>ProgramInterface</type></param>
      <param name="pname"><type>ProgramInterfaceParameter</type></param>
    </function>

    <function name="GetProgramResourceIndex">
      <param name="programInterface"><type>ProgramInterface</type></param>
    </function>

    <function name="GetProgramResourceName">
      <param name="programInterface"><type>ProgramInterface</type></param>
    </function>

    <function name="GetProgramResourceiv">
      <param name="programInterface"><type>ProgramInterface</type></param>
      <param name="props"><type>ProgramProperty*</type></param>
    </function>

    <function name="GetProgramResourceLocation">
      <param name="programInterface"><type>ProgramInterface</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="ProgramInterface">
      <use token="UNIFORM" />
      <use token="UNIFORM_BLOCK" />
      <use token="ATOMIC_COUNTER_BUFFER" />
      <use token="PROGRAM_INPUT" />
      <use token="PROGRAM_OUTPUT" />
      <use token="TRANSFORM_FEEDBACK_VARYING" />
      <use token="BUFFER_VARIABLE" />
      <use token="SHADER_STORAGE_BLOCK" />
    </enum>
    <enum name="ProgramInterfaceParameter">
      <use token="ACTIVE_RESOURCES" />
      <use token="MAX_NAME_LENGTH" />
      <use token="MAX_NUM_ACTIVE_VARIABLES" />
    </enum>
    <enum name="ProgramProperty">
      <use token="ACTIVE_VARIABLES" />
      <use token="BUFFER_BINDING" />
      <use token="NUM_ACTIVE_VARIABLES" />
      <use token="ARRAY_SIZE" />
      <use token="ARRAY_STRIDE" />
      <use token="BLOCK_INDEX" />
      <use token="IS_ROW_MAJOR" />
      <use token="MATRIX_STRIDE" />
      <use token="ATOMIC_COUNTER_BUFFER_INDEX" />
      <use token="BUFFER_DATA_SIZE" />
      <use token="LOCATION" />
      <use token="NAME_LENGTH" />
      <use token="OFFSET" />
      <use token="REFERENCED_BY_VERTEX_SHADER" />
      <use token="REFERENCED_BY_FRAGMENT_SHADER" />
      <use token="REFERENCED_BY_COMPUTE_SHADER" />
      <use token="TOP_LEVEL_ARRAY_SIZE" />
      <use token="TOP_LEVEL_ARRAY_STRIDE" />
      <use token="TYPE" />
    </enum>
  </add>

  <!-- KHR_separate_shader_objects -->

  <replace name="gles2" version="3.1">
    <function name="CreateShaderProgramv">
      <param name="type"><type>ShaderType</type></param>
    </function>
    <function name="GetProgramPipelineiv">
      <param name="pname"><type>ProgramPipelineParameter</type></param>
    </function>
    <function name="UseProgramStages">
      <param name="stages"><type>ProgramStageMask</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="GetPName">
      <use token="PROGRAM_PIPELINE_BINDING" />
    </enum>
    <enum name="GetProgramParameterName">
      <use token="PROGRAM_SEPARABLE" />
    </enum>
    <enum name="ProgramParameterName">
      <use token="PROGRAM_SEPARABLE" />
    </enum>
    <enum name="ProgramPipelineParameter">
      <use token="ACTIVE_PROGRAM" />
      <use token="VERTEX_SHADER" />
      <use token="FRAGMENT_SHADER" />
      <use token="COMPUTE_SHADER" />
      <use token="VALIDATE_STATUS" />
      <use token="INFO_LOG_LENGTH" />
    </enum>
    <enum name="ProgramStageMask">
      <use token="VERTEX_SHADER_BIT" />
      <use token="FRAGMENT_SHADER_BIT" />
      <use token="COMPUTE_SHADER_BIT" />
      <use token="ALL_SHADER_BITS" />
    </enum>
  </add>

  <!-- KHR_shader_atomic_counters -->

  <add name="gles2" version="3.1">
    <enum name="ActiveUniformType">
      <use token="UNSIGNED_INT_ATOMIC_COUNTER" />
    </enum>
    <enum name="BufferTarget">
      <use token="ATOMIC_COUNTER_BUFFER"/>
    </enum>
    <enum name="GetIndexedPName">
      <use token="ATOMIC_COUNTER_BUFFER_START"/>
      <use token="ATOMIC_COUNTER_BUFFER_SIZE"/>
    </enum>
    <enum name="GetPName">
      <use token="ATOMIC_COUNTER_BUFFER_BINDING"/>
      <use token="MAX_VERTEX_ATOMIC_COUNTER_BUFFERS"/>
      <use token="MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS"/>
      <use token="MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS"/>
      <use token="MAX_COMBINED_ATOMIC_COUNTER_BUFFERS"/>
      <use token="MAX_VERTEX_ATOMIC_COUNTERS"/>
      <use token="MAX_FRAGMENT_ATOMIC_COUNTERS"/>
      <use token="MAX_COMPUTE_ATOMIC_COUNTERS"/>
      <use token="MAX_COMBINED_ATOMIC_COUNTERS"/>
      <use token="MAX_ATOMIC_COUNTER_BUFFER_SIZE"/>
      <use token="MAX_ATOMIC_COUNTER_BUFFER_BINDINGS"/>
    </enum>
    <enum name="GetProgramParameterName">
      <use token="ACTIVE_ATOMIC_COUNTER_BUFFERS"/>
    </enum>
    <enum name="ActiveVariableType">
      <use token="UNSIGNED_INT_ATOMIC_COUNTER" />
    </enum>
  </add>

  <!-- KHR_shader_image_load_store -->

  <replace name="gles2" version="3.1">
    <function name="BindImageTexture">
      <param name="access"><type>TextureAccess</type></param>
      <param name="format"><type>SizedInternalFormat</type></param>
    </function>
    <function name="GetBooleani_v">
      <param name="target"><type>GetIndexedPName</type></param>
    </function>
    <function name="MemoryBarrier">
      <param name="barriers"><type>MemoryBarrierFlags</type></param>
    </function>
    <function name="MemoryBarrierByRegion">
      <param name="barriers"><type>MemoryBarrierRegionFlags</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="ActiveUniformType">
      <use token="IMAGE_2D"/>
      <use token="IMAGE_3D"/>
      <use token="IMAGE_CUBE"/>
      <use token="IMAGE_2D_ARRAY"/>
      <use token="INT_IMAGE_2D"/>
      <use token="INT_IMAGE_3D"/>
      <use token="INT_IMAGE_CUBE"/>
      <use token="INT_IMAGE_2D_ARRAY"/>
      <use token="UNSIGNED_INT_IMAGE_2D"/>
      <use token="UNSIGNED_INT_IMAGE_3D"/>
      <use token="UNSIGNED_INT_IMAGE_CUBE"/>
      <use token="UNSIGNED_INT_IMAGE_2D_ARRAY"/>
    </enum>
    <enum name="GetPName">
      <use token="MAX_VERTEX_IMAGE_UNIFORMS"/>
      <use token="MAX_FRAGMENT_IMAGE_UNIFORMS"/>
      <use token="MAX_COMPUTE_IMAGE_UNIFORMS"/>
      <use token="MAX_COMBINED_IMAGE_UNIFORMS"/>
      <use token="IMAGE_BINDING_NAME"/>
      <use token="IMAGE_BINDING_LEVEL"/>
      <use token="IMAGE_BINDING_LAYERED"/>
      <use token="IMAGE_BINDING_LAYER"/>
      <use token="IMAGE_BINDING_ACCESS"/>
      <use token="IMAGE_BINDING_FORMAT"/>
    </enum>
    <enum name="GetTextureParameterName">
      <use token="IMAGE_FORMAT_COMPATIBILITY_TYPE"/>
    </enum>
    <enum name="MemoryBarrierFlags">
      <use token="VERTEX_ATTRIB_ARRAY_BARRIER_BIT"/>
      <use token="ELEMENT_ARRAY_BARRIER_BIT"/>
      <use token="UNIFORM_BARRIER_BIT"/>
      <use token="TEXTURE_FETCH_BARRIER_BIT"/>
      <use token="SHADER_IMAGE_ACCESS_BARRIER_BIT"/>
      <use token="COMMAND_BARRIER_BIT"/>
      <use token="PIXEL_BUFFER_BARRIER_BIT"/>
      <use token="TEXTURE_UPDATE_BARRIER_BIT"/>
      <use token="BUFFER_UPDATE_BARRIER_BIT"/>
      <use token="FRAMEBUFFER_BARRIER_BIT"/>
      <use token="TRANSFORM_FEEDBACK_BARRIER_BIT"/>
      <use token="ATOMIC_COUNTER_BARRIER_BIT"/>
      <use token="ALL_BARRIER_BITS"/>
    </enum>
    <enum name="MemoryBarrierRegionFlags">
      <use token="ATOMIC_COUNTER_BARRIER_BIT"/>
      <use token="FRAMEBUFFER_BARRIER_BIT"/>
      <use token="SHADER_IMAGE_ACCESS_BARRIER_BIT"/>
      <use token="TEXTURE_FETCH_BARRIER_BIT"/>
      <use token="UNIFORM_BARRIER_BIT"/>
      <use token="ALL_BARRIER_BITS"/>
    </enum>
    <enum name="TextureAccess">
      <use token="READ_ONLY" />
      <use token="WRITE_ONLY" />
      <use token="READ_WRITE" />
    </enum>
  </add>

  <!-- KHR_shader_storage_buffer_object -->

  <add name="gles2" version="3.1">
    <enum name="BufferTarget">
      <use token="SHADER_STORAGE_BUFFER" />
    </enum>
    <enum name="GetPName">
      <use token="SHADER_STORAGE_BUFFER_BINDING" />
      <use token="MAX_VERTEX_SHADER_STORAGE_BLOCKS"/>
      <use token="MAX_FRAGMENT_SHADER_STORAGE_BLOCKS"/>
      <use token="MAX_COMPUTE_SHADER_STORAGE_BLOCKS"/>
      <use token="MAX_COMBINED_SHADER_STORAGE_BLOCKS"/>
      <use token="MAX_SHADER_STORAGE_BUFFER_BINDINGS"/>
      <use token="MAX_SHADER_STORAGE_BLOCK_SIZE"/>
      <use token="SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT"/>
      <use token="MAX_COMBINED_SHADER_OUTPUT_RESOURCES"/>
    </enum>
    <enum name="GetIndexedPName">
      <use token="SHADER_STORAGE_BUFFER_START" />
      <use token="SHADER_STORAGE_BUFFER_SIZE" />
    </enum>
    <enum name="MemoryBarrierMask">
      <use token="SHADER_STORAGE_BARRIER_BIT" />
    </enum>
    <enum name="MemoryBarrierRegionMask">
      <use token="SHADER_STORAGE_BARRIER_BIT" />
    </enum>
  </add>

  <!-- KHR_stencil_texturing -->

  <add name="gles2" version="3.1">
    <enum name="PixelFormat">
      <use token="STENCIL_INDEX" />
    </enum>
    <enum name="TextureParameterName">
      <use token="DEPTH_STENCIL_TEXTURE_MODE" />
    </enum>
  </add>

  <!-- KHR_texture_gather -->

  <add name="gles2" version="3.1">
    <enum name="GetPName">
      <use token="MAX_PROGRAM_TEXTURE_GATHER_OFFSET" />
      <use token="MIN_PROGRAM_TEXTURE_GATHER_OFFSET" />
    </enum>
  </add>

  <!-- KHR_texture_storage_multisample -->

  <replace name="gles2" version="3.1">
    <function name="TexStorage2DMultisample">
      <param name="target"><type>TextureTargetMultisample2d</type></param>
      <param name="internalformat"><type>SizedInternalFormat</type></param>
    </function>
    <function name="GetMultisample">
      <param name="pname"><type>GetMultisamplePName</type></param>
    </function>
    <function name="GetTexLevelParameter">
      <param name="target"><type>TextureTarget</type></param>
      <param name="pname"><type>GetTextureParameterName</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="ActiveUniformType">
      <use token="SAMPLER_2D_MULTISAMPLE"/>
      <use token="INT_SAMPLER_2D_MULTISAMPLE"/>
      <use token="UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE"/>
    </enum>
    <enum name="EnableCap">
      <use token="SAMPLE_MASK" />
    </enum>
    <enum name="GetIndexedPName">
      <use token="SAMPLE_MASK_VALUE" />
    </enum>
    <enum name="GetPName">
      <use token="MAX_SAMPLE_MASK_WORDS"/>
      <use token="MAX_COLOR_TEXTURE_SAMPLES"/>
      <use token="MAX_DEPTH_TEXTURE_SAMPLES"/>
      <use token="MAX_INTEGER_SAMPLES"/>
      <use token="TEXTURE_BINDING_2D_MULTISAMPLE"/>
    </enum>
    <enum name="GetMultisamplePName">
      <use token="SAMPLE_POSITION" />
    </enum>
    <enum name="GetTextureParameterName">
      <use token="TEXTURE_SAMPLES" />
      <use token="TEXTURE_FIXED_SAMPLE_LOCATIONS"/>
      <use token="TEXTURE_WIDTH"/>
      <use token="TEXTURE_HEIGHT"/>
      <use token="TEXTURE_DEPTH"/>
      <use token="TEXTURE_INTERNAL_FORMAT"/>
      <use token="TEXTURE_RED_SIZE"/>
      <use token="TEXTURE_GREEN_SIZE"/>
      <use token="TEXTURE_BLUE_SIZE"/>
      <use token="TEXTURE_ALPHA_SIZE"/>
      <use token="TEXTURE_DEPTH_SIZE"/>
      <use token="TEXTURE_STENCIL_SIZE"/>
      <use token="TEXTURE_SHARED_SIZE"/>
      <use token="TEXTURE_RED_TYPE"/>
      <use token="TEXTURE_GREEN_TYPE"/>
      <use token="TEXTURE_BLUE_TYPE"/>
      <use token="TEXTURE_ALPHA_TYPE"/>
      <use token="TEXTURE_DEPTH_TYPE"/>
      <use token="TEXTURE_COMPRESSED"/>
    </enum>
    <enum name="TextureTargetMultisample2d">
      <use token="TEXTURE_2D_MULTISAMPLE" />
    </enum>
  </add>

  <!-- KHR_vertex_attrib_binding -->

  <replace name="gles2" version="3.1">
    <function name="VertexAttribFormat" extension="Core">
      <param name="type"><type>VertexAttribType</type></param>
    </function>
    <function name="VertexAttribIFormat" extension="Core">
      <param name="type"><type>VertexAttribIntegerType</type></param>
    </function>
  </replace>

  <add name="gles2" version="3.1">
    <enum name="VertexAttribType">
      <use token="BYTE" />
      <use token="UNSIGNED_BYTE" />
      <use token="SHORT" />
      <use token="UNSIGNED_SHORT" />
      <use token="INT" />
      <use token="UNSIGNED_INT" />
      <use token="FIXED" />
      <use token="FLOAT" />
      <use token="HALF_FLOAT" />
      <use token="UNSIGNED_INT_2_10_10_10_REV" />
      <use token="INT_2_10_10_10_REV" />
    </enum>
    <enum name="VertexAttribIntegerType">
      <use token="BYTE" />
      <use token="UNSIGNED_BYTE" />
      <use token="SHORT" />
      <use token="UNSIGNED_SHORT" />
      <use token="INT" />
      <use token="UNSIGNED_INT" />
    </enum>
  </add>
</signatures>
