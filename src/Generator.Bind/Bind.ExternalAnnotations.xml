<?xml version="1.0" encoding="utf-8"?>
<assembly name="Bind">
  <member name="M:Bind.Baking.ProfileBaker.#ctor(System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.ApiProfile},System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.ApiProfileOverride})">
    <parameter name="profiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="overrides">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Baking.ProfileBaker.BakeProfile(System.String,Bind.Versioning.VersionRange)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="profileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versionRange">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Extensions.ApiProfileExtensions.GetFriendlyName(Bind.XML.IApiProfile)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="profile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Extensions.TypeDefinitionExtensions.GetQualifiedTypeOrAlias(Bind.Structures.TypeDefinition)">
    <parameter name="this">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Extensions.XContainerExtensions.GetRequiredElement(System.Xml.Linq.XContainer,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Extensions.XElementExtensions.GetRequiredAttribute(System.Xml.Linq.XElement,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Structures.IDeclarable.GetDeclarationString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.Structures.TypeDefinition.#ctor(Bind.Structures.TypeDefinition)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Structures.TypeDefinition.CompareTo(Bind.Structures.TypeDefinition)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Mappers.IMapper`1.HasMapping(`0)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Mappers.IMapper`1.Map(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Translators.ITranslator`1.TranslateProfile(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="profile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Trimmers.ITrimmer`1.IsRelevant(`0)">
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Trimmers.ITrimmer`1.Trim(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Trimmers.OpenGLFunctionExtensionTrimmer.IsRelevant(Bind.XML.INamedExtensionScopedEntity)">
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Translation.Trimmers.OpenGLFunctionExtensionTrimmer.Trim(Bind.XML.INamedExtensionScopedEntity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Typemap.TypemapBaker.BakeTypemaps(System.Collections.Generic.IReadOnlyDictionary{Bind.XML.Signatures.Functions.TypeSignature,Bind.XML.Signatures.Functions.TypeSignature}[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typemaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Typemap.TypemapReader.ReadTypemap(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Versioning.VersionRange.CompareTo(Bind.Versioning.VersionRange)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Versioning.VersionRange.CompareTo(System.Version)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Versioning.VersionRange.op_GreaterThan(Bind.Versioning.VersionRange,Bind.Versioning.VersionRange)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Versioning.VersionRange.op_LessThan(Bind.Versioning.VersionRange,Bind.Versioning.VersionRange)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Writers.SourceWriter.#ctor(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Writers.SourceWriter.#ctor(System.IO.TextWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tabString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Writers.SourceWriter.BeginBlock(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.Writers.SourceWriter.BeginIndent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.Writers.SourceWriterBlock.#ctor(Bind.Writers.SourceWriter,System.Boolean)">
    <parameter name="sourceWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.Writers.SourceWriterIndentation.#ctor(Bind.Writers.SourceWriter)">
    <parameter name="sourceWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.IApiProfile.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.IApiProfile.Versions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.INamedExtensionScopedEntity.Extension">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.INamedExtensionScopedEntity.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.ApiProfileOverride.#ctor(System.String,Bind.Versioning.VersionRange,System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Enumerations.EnumerationOverride},System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Functions.FunctionOverride},System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Functions.FunctionOverride})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addedEnumerations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacedFunctions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionOverloads">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.ApiProfileOverride.AddedEnumerations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.ApiProfileOverride.FunctionOverloads">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.ApiProfileOverride.ReplacedFunctions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Enumerations.EnumerationOverride.#ctor(System.String,System.Collections.Generic.List{Bind.XML.Signatures.Enumerations.TokenSignature},System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Enumerations.UseTokenOverride},System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Enumerations.ReuseEnumerationOverride})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directTokens">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="useTokens">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reuseEnumerations">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.EnumerationOverride.DirectTokens">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.EnumerationOverride.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.EnumerationOverride.ReuseEnumerations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.EnumerationOverride.UseTokens">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Enumerations.ReuseEnumerationOverride.#ctor(System.String)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.ReuseEnumerationOverride.Enumeration">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Enumerations.UseTokenOverride.#ctor(System.String,System.String)">
    <parameter name="token">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.UseTokenOverride.Enumeration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Enumerations.UseTokenOverride.Token">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Functions.FunctionOverride.#ctor(System.String,System.String,System.Version,System.String,Bind.XML.Signatures.Functions.TypeSignature,System.Collections.Generic.IReadOnlyList{Bind.XML.Overrides.Functions.ParameterOverride})">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseExtension">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obsoletionReason">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newReturnType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterOverrides">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.BaseExtension">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.BaseName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Functions.FunctionOverride.HasSameSignatureAs(Bind.XML.Overrides.Functions.FunctionOverride)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.NewReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.NewVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.ObsoletionReason">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.FunctionOverride.ParameterOverrides">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.Functions.ParameterOverride.#ctor(System.String,System.String,Bind.XML.Signatures.Functions.TypeSignature,System.Nullable{Bind.Structures.FlowDirection},System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newCount">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Overrides.Functions.ParameterOverride.BaseName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.ParameterOverride.NewCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.ParameterOverride.NewFlow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.ParameterOverride.NewName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Overrides.Functions.ParameterOverride.NewType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Overrides.OverrideReader.GetProfileOverrides(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="overrideFilePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Overrides.OverrideReader.GetProfileOverrides(System.Xml.Linq.XDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="signatureDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.GetSignatureRoot(System.Xml.Linq.XDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="signatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseCountSignature(System.String,System.Boolean@,System.Collections.Generic.IReadOnlyList{System.String}@,System.Boolean@,System.String@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>hasComputedCount : true =&gt; computedCountParameterNames : notnull; hasValueReference : true =&gt; valueReferenceName : notnull</argument>
    </attribute>
    <parameter name="countData">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="computedCountParameterNames">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueReferenceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueReferenceExpression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseTokenSignature(System.Xml.Linq.XElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tokenElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseTypeSignature(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseTypeSignature(System.Xml.Linq.XElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseVersion(System.String,System.Version)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>defaultVersion : null =&gt; canbenull; defaultVersion : notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="versionString">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ParseVersion(System.Xml.Linq.XElement,System.String,System.Version)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>defaultVersion : null =&gt; canbenull; defaultVersion : notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ResolveComputedCountSignatures(System.Collections.Generic.IReadOnlyCollection{Bind.XML.Signatures.Functions.ParameterSignature},System.Collections.Generic.IEnumerable{System.ValueTuple{Bind.XML.Signatures.Functions.ParameterSignature,System.Collections.Generic.IReadOnlyList{System.String}}})">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parametersWithComputedCounts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.ParsingHelpers.ResolveReferenceCountSignatures(System.Collections.Generic.IReadOnlyCollection{Bind.XML.Signatures.Functions.ParameterSignature},System.Collections.Generic.IEnumerable{System.ValueTuple{Bind.XML.Signatures.Functions.ParameterSignature,System.String}})">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parametersWithValueReferenceCounts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Signatures.ApiProfile.#ctor(System.String,Bind.Versioning.VersionRange,System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.Functions.FunctionSignature},System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.Enumerations.EnumerationSignature})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="enumerations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.ApiProfile.Enumerations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.ApiProfile.Functions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Enumerations.EnumerationSignature.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.Enumerations.TokenSignature})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tokens">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Enumerations.EnumerationSignature.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Enumerations.EnumerationSignature.Tokens">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Enumerations.TokenSignature.#ctor(System.String,System.Int64,System.Version,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="deprecatedIn">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="remarks">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Enumerations.TokenSignature.DeprecatedIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Enumerations.TokenSignature.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Enumerations.TokenSignature.Remarks">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Functions.CountSignature.#ctor(Bind.XML.Signatures.Functions.ParameterSignature)">
    <parameter name="valueReference">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Signatures.Functions.CountSignature.#ctor(System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.Functions.ParameterSignature})">
    <parameter name="computedFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Functions.CountSignature.ComputedFrom">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.CountSignature.ValueReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Functions.FunctionSignature.#ctor(System.String,System.String,System.String,System.String,System.Version,Bind.XML.Signatures.Functions.TypeSignature,System.Collections.Generic.IReadOnlyList{Bind.XML.Signatures.Functions.ParameterSignature},System.Version,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nativeEntrypoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="introducedIn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="deprecatedIn">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="deprecationReason">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.Category">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.DeprecatedIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.DeprecationReason">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.Extension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.IntroducedIn">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.FunctionSignature.ReturnType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Functions.ParameterSignature.#ctor(System.String,Bind.XML.Signatures.Functions.TypeSignature,Bind.Structures.FlowDirection,Bind.XML.Signatures.Functions.CountSignature)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Functions.ParameterSignature.Count">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.ParameterSignature.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Bind.XML.Signatures.Functions.ParameterSignature.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Functions.TypeSignature.#ctor(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Bind.XML.Signatures.Functions.TypeSignature.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Bind.XML.Signatures.Functions.TypeSignature.op_Equality(Bind.XML.Signatures.Functions.TypeSignature,Bind.XML.Signatures.Functions.TypeSignature)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Signatures.Functions.TypeSignature.op_Inequality(Bind.XML.Signatures.Functions.TypeSignature,Bind.XML.Signatures.Functions.TypeSignature)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Signatures.SignatureReader.GetAvailableProfiles(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="signatureFilePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.PathReferenceAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Bind.XML.Signatures.SignatureReader.GetAvailableProfiles(System.Xml.Linq.XDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="signatureDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>