//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.ES11
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "SinglePrecision" in the extension "Oes".
        /// </summary>
        public static partial class Oes
        {
            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="depth">
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glClearDepthfOES")]
            public static void ClearDepth(float depth)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glClipPlanefOES")]
            public static void ClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [CountAttribute(Count = 4)] float[] equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glClipPlanefOES")]
            public static void ClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [CountAttribute(Count = 4)] ref float equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glClipPlanefOES")]
            public static unsafe void ClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [CountAttribute(Count = 4)] float* equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="f">
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glDepthRangefOES")]
            public static void DepthRange(float n, float f)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="l">
            /// </param>
            /// <param name="r">
            /// </param>
            /// <param name="b">
            /// </param>
            /// <param name="t">
            /// </param>
            /// <param name="n">
            /// </param>
            /// <param name="f">
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glFrustumfOES")]
            public static void Frustum(float l, float r, float b, float t, float n, float f)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glGetClipPlanefOES")]
            public static void GetClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [OutAttribute, CountAttribute(Count = 4)] float[] equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glGetClipPlanefOES")]
            public static void GetClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [OutAttribute, CountAttribute(Count = 4)] out float equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="plane">
            /// </param>
            /// <param name="equation">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glGetClipPlanefOES")]
            public static unsafe void GetClipPlane(OpenTK.Graphics.ES11.ClipPlaneName plane, [OutAttribute, CountAttribute(Count = 4)] float* equation)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_single_precision]
            /// </summary>
            /// <param name="l">
            /// </param>
            /// <param name="r">
            /// </param>
            /// <param name="b">
            /// </param>
            /// <param name="t">
            /// </param>
            /// <param name="n">
            /// </param>
            /// <param name="f">
            /// </param>
            [AutoGenerated(Category = "OES_single_precision", Version = "", EntryPoint = "glOrthofOES")]
            public static void Ortho(float l, float r, float b, float t, float n, float f)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(26)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glClearDepthfOES(float depth);

            [Slot(34)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glClipPlanefOES(OpenTK.Graphics.ES11.ClipPlaneName plane, [CountAttribute(Count = 4)] float* equation);

            [Slot(72)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glDepthRangefOES(float n, float f);

            [Slot(129)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glFrustumfOES(float l, float r, float b, float t, float n, float f);

            [Slot(143)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetClipPlanefOES(OpenTK.Graphics.ES11.ClipPlaneName plane, [OutAttribute, CountAttribute(Count = 4)] float* equation);

            [Slot(276)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glOrthofOES(float l, float r, float b, float t, float n, float f);
        }
    }
}
