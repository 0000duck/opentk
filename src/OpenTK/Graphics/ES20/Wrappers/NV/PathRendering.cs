//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.ES20
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "PathRendering" in the extension "NV".
        /// </summary>
        public static partial class NV
        {
            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="srcPath">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCopyPathNV")]
            public static void CopyPath(uint resultPath, uint srcPath)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static unsafe void CoverFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static unsafe void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static unsafe void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static unsafe void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathInstancedNV")]
            public static unsafe void CoverFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverFillPathNV")]
            public static void CoverFillPath(uint path, OpenTK.Graphics.ES20.PathCoverMode coverMode)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static unsafe void CoverStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static unsafe void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static unsafe void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static unsafe void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathInstancedNV")]
            public static unsafe void CoverStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glCoverStrokePathNV")]
            public static void CoverStrokePath(uint path, OpenTK.Graphics.ES20.PathCoverMode coverMode)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="range">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glDeletePathsNV")]
            public static void DeletePath(uint path, int range)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="range">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGenPathsNV")]
            public static uint GenPath(int range)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenfvNV")]
            public static void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenfvNV")]
            public static void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] out float value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenfvNV")]
            public static unsafe void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenivNV")]
            public static void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenivNV")]
            public static void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] out int value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathColorGenivNV")]
            public static unsafe void GetPathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCommandsNV")]
            public static Byte GetPathCommand(uint path)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commands">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCommandsNV")]
            public static void GetPathCommands(uint path, [OutAttribute, CountAttribute(Computed = "path")] Byte[] commands)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commands">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCommandsNV")]
            public static void GetPathCommands(uint path, [OutAttribute, CountAttribute(Computed = "path")] out Byte commands)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commands">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCommandsNV")]
            public static unsafe void GetPathCommands(uint path, [OutAttribute, CountAttribute(Computed = "path")] Byte* commands)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCoordsNV")]
            public static float GetPathCoord(uint path)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCoordsNV")]
            public static void GetPathCoords(uint path, [OutAttribute, CountAttribute(Computed = "path")] float[] coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCoordsNV")]
            public static void GetPathCoords(uint path, [OutAttribute, CountAttribute(Computed = "path")] out float coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathCoordsNV")]
            public static unsafe void GetPathCoords(uint path, [OutAttribute, CountAttribute(Computed = "path")] float* coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathDashArrayNV")]
            public static float GetPathDashArray(uint path)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashArray">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathDashArrayNV")]
            public static void GetPathDashArray(uint path, [OutAttribute, CountAttribute(Computed = "path")] float[] dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashArray">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathDashArrayNV")]
            public static void GetPathDashArray(uint path, [OutAttribute, CountAttribute(Computed = "path")] out float dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashArray">
            /// [length: COMPSIZE(path)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathDashArrayNV")]
            public static unsafe void GetPathDashArray(uint path, [OutAttribute, CountAttribute(Computed = "path")] float* dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="startSegment">
            /// </param>
            /// <param name="numSegments">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathLengthNV")]
            public static float GetPathLength(uint path, int startSegment, int numSegments)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricRangeNV")]
            public static void GetPathMetricRange(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, uint firstPathName, int numPaths, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricRangeNV")]
            public static void GetPathMetricRange(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, uint firstPathName, int numPaths, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricRangeNV")]
            public static unsafe void GetPathMetricRange(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, uint firstPathName, int numPaths, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static unsafe void GetPathMetric(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static unsafe void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static unsafe void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static unsafe void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float[] metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] out float metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="metricQueryMask">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="metrics">
            /// [length: COMPSIZE(metricQueryMask,numPaths,stride)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathMetricsNV")]
            public static unsafe void GetPathMetric<T3>(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterfvNV")]
            public static void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] float[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterfvNV")]
            public static void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] out float value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterfvNV")]
            public static unsafe void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] float* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterivNV")]
            public static void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] int[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterivNV")]
            public static void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] out int value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathParameterivNV")]
            public static unsafe void GetPathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] int* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float[] returnedSpacing)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] out float returnedSpacing)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static unsafe void GetPathSpacing(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float[] returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] out float returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static unsafe void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float[] returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] out float returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static unsafe void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float[] returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] out float returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static unsafe void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T3[,,] paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float[] returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] out float returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="pathListMode">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="advanceScale">
            /// </param>
            /// <param name="kerningScale">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="returnedSpacing">
            /// [length: COMPSIZE(pathListMode,numPaths)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathSpacingNV")]
            public static unsafe void GetPathSpacing<T3>(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T3 paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenfvNV")]
            public static void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenfvNV")]
            public static void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] out float value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenfvNV")]
            public static unsafe void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenivNV")]
            public static void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenivNV")]
            public static void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] out int value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetPathTexGenivNV")]
            public static unsafe void GetPathTexGen(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="programInterface">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="propCount">
            /// </param>
            /// <param name="props">
            /// </param>
            /// <param name="bufSize">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetProgramResourcefvNV")]
            public static void GetProgramResource(uint program, OpenTK.Graphics.ES20.ProgramInterface programInterface, uint index, int propCount, NvPathRendering[] props, int bufSize, [OutAttribute] int[] length, [OutAttribute] float[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="programInterface">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="propCount">
            /// </param>
            /// <param name="props">
            /// </param>
            /// <param name="bufSize">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetProgramResourcefvNV")]
            public static void GetProgramResource(uint program, OpenTK.Graphics.ES20.ProgramInterface programInterface, uint index, int propCount, ref NvPathRendering props, int bufSize, [OutAttribute] out int length, [OutAttribute] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="programInterface">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="propCount">
            /// </param>
            /// <param name="props">
            /// </param>
            /// <param name="bufSize">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glGetProgramResourcefvNV")]
            public static unsafe void GetProgramResource(uint program, OpenTK.Graphics.ES20.ProgramInterface programInterface, uint index, int propCount, NvPathRendering* props, int bufSize, [OutAttribute] int* length, [OutAttribute] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="pathA">
            /// </param>
            /// <param name="pathB">
            /// </param>
            /// <param name="weight">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glInterpolatePathsNV")]
            public static void InterpolatePath(uint resultPath, uint pathA, uint pathB, float weight)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glIsPathNV")]
            public static bool IsPath(uint path)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glIsPointInFillPathNV")]
            public static bool IsPointInFillPath(uint path, uint mask, float x, float y)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glIsPointInStrokePathNV")]
            public static bool IsPointInStrokePath(uint path, float x, float y)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x2fNV")]
            public static void MatrixLoad3x2(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x2fNV")]
            public static void MatrixLoad3x2(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x2fNV")]
            public static unsafe void MatrixLoad3x2(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x3fNV")]
            public static void MatrixLoad3x3(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x3fNV")]
            public static void MatrixLoad3x3(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoad3x3fNV")]
            public static unsafe void MatrixLoad3x3(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoadTranspose3x3fNV")]
            public static void MatrixLoadTranspose3x3(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoadTranspose3x3fNV")]
            public static void MatrixLoadTranspose3x3(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixLoadTranspose3x3fNV")]
            public static unsafe void MatrixLoadTranspose3x3(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x2fNV")]
            public static void MatrixMult3x2(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x2fNV")]
            public static void MatrixMult3x2(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x2fNV")]
            public static unsafe void MatrixMult3x2(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x3fNV")]
            public static void MatrixMult3x3(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x3fNV")]
            public static void MatrixMult3x3(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMult3x3fNV")]
            public static unsafe void MatrixMult3x3(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMultTranspose3x3fNV")]
            public static void MatrixMultTranspose3x3(NvPathRendering matrixMode, float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMultTranspose3x3fNV")]
            public static void MatrixMultTranspose3x3(NvPathRendering matrixMode, ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="matrixMode">
            /// </param>
            /// <param name="m">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glMatrixMultTranspose3x3fNV")]
            public static unsafe void MatrixMultTranspose3x3(NvPathRendering matrixMode, float* m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="colorFormat">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,colorFormat)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathColorGenNV")]
            public static void PathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode genMode, NvPathRendering colorFormat, [CountAttribute(Computed = "genMode,colorFormat")] float[] coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="colorFormat">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,colorFormat)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathColorGenNV")]
            public static void PathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode genMode, NvPathRendering colorFormat, [CountAttribute(Computed = "genMode,colorFormat")] ref float coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="color">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="colorFormat">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,colorFormat)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathColorGenNV")]
            public static unsafe void PathColorGen(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode genMode, NvPathRendering colorFormat, [CountAttribute(Computed = "genMode,colorFormat")] float* coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T5 coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T5 coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static unsafe void PathCommands(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static unsafe void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static unsafe void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static unsafe void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T5[,,] coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCommandsNV")]
            public static unsafe void PathCommands<T5>(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T5 coords)
                where T5 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoordsNV")]
            public static void PathCoords(uint path, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoordsNV")]
            public static void PathCoords<T3>(uint path, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T3[] coords)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoordsNV")]
            public static void PathCoords<T3>(uint path, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T3[,] coords)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoordsNV")]
            public static void PathCoords<T3>(uint path, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T3[,,] coords)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoordsNV")]
            public static void PathCoords<T3>(uint path, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T3 coords)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="func">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathCoverDepthFuncNV")]
            public static void PathCoverDepthFunc(OpenTK.Graphics.ES20.DepthFunction func)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashCount">
            /// </param>
            /// <param name="dashArray">
            /// [length: dashCount]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathDashArrayNV")]
            public static void PathDashArray(uint path, int dashCount, [CountAttribute(Parameter = "dashCount")] float[] dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashCount">
            /// </param>
            /// <param name="dashArray">
            /// [length: dashCount]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathDashArrayNV")]
            public static void PathDashArray(uint path, int dashCount, [CountAttribute(Parameter = "dashCount")] ref float dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="dashCount">
            /// </param>
            /// <param name="dashArray">
            /// [length: dashCount]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathDashArrayNV")]
            public static unsafe void PathDashArray(uint path, int dashCount, [CountAttribute(Parameter = "dashCount")] float* dashArray)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="genMode">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathFogGenNV")]
            public static void PathFogGen(OpenTK.Graphics.ES20.PathGenMode genMode)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexArrayNV")]
            public static NvPathRendering PathGlyphIndexArray(uint firstPathName, NvPathRendering fontTarget, IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexArrayNV")]
            public static NvPathRendering PathGlyphIndexArray<T2>(uint firstPathName, NvPathRendering fontTarget, [InAttribute, OutAttribute] T2[] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexArrayNV")]
            public static NvPathRendering PathGlyphIndexArray<T2>(uint firstPathName, NvPathRendering fontTarget, [InAttribute, OutAttribute] T2[,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexArrayNV")]
            public static NvPathRendering PathGlyphIndexArray<T2>(uint firstPathName, NvPathRendering fontTarget, [InAttribute, OutAttribute] T2[,,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexArrayNV")]
            public static NvPathRendering PathGlyphIndexArray<T2>(uint firstPathName, NvPathRendering fontTarget, [InAttribute, OutAttribute] ref T2 fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            /// <param name="baseAndCount">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexRangeNV")]
            public static NvPathRendering PathGlyphIndexRange(NvPathRendering fontTarget, IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            /// <param name="baseAndCount">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexRangeNV")]
            public static NvPathRendering PathGlyphIndexRange<T1>(NvPathRendering fontTarget, [InAttribute, OutAttribute] T1[] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            /// <param name="baseAndCount">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexRangeNV")]
            public static NvPathRendering PathGlyphIndexRange<T1>(NvPathRendering fontTarget, [InAttribute, OutAttribute] T1[,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            /// <param name="baseAndCount">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexRangeNV")]
            public static NvPathRendering PathGlyphIndexRange<T1>(NvPathRendering fontTarget, [InAttribute, OutAttribute] T1[,,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            /// <param name="baseAndCount">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphIndexRangeNV")]
            public static NvPathRendering PathGlyphIndexRange<T1>(NvPathRendering fontTarget, [InAttribute, OutAttribute] ref T1 fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyph">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphRangeNV")]
            public static void PathGlyphRange(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [CountAttribute(Computed = "fontTarget,fontName")] IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyph">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphRangeNV")]
            public static void PathGlyphRange<T2>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyph">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphRangeNV")]
            public static void PathGlyphRange<T2>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyph">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphRangeNV")]
            public static void PathGlyphRange<T2>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[,,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="firstGlyph">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphRangeNV")]
            public static void PathGlyphRange<T2>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] ref T2 fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="charcodes">
            /// [length: COMPSIZE(numGlyphs,type,charcodes)]
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphsNV")]
            public static void PathGlyph(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [CountAttribute(Computed = "fontTarget,fontName")] IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [CountAttribute(Computed = "numGlyphs,type,charcodes")] IntPtr charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="charcodes">
            /// [length: COMPSIZE(numGlyphs,type,charcodes)]
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphsNV")]
            public static void PathGlyph<T2, T6>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [InAttribute, OutAttribute, CountAttribute(Computed = "numGlyphs,type,charcodes")] T6[] charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
                where T6 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="charcodes">
            /// [length: COMPSIZE(numGlyphs,type,charcodes)]
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphsNV")]
            public static void PathGlyph<T2, T6>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [InAttribute, OutAttribute, CountAttribute(Computed = "numGlyphs,type,charcodes")] T6[,] charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
                where T6 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="charcodes">
            /// [length: COMPSIZE(numGlyphs,type,charcodes)]
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphsNV")]
            public static void PathGlyph<T2, T6>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] T2[,,] fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [InAttribute, OutAttribute, CountAttribute(Computed = "numGlyphs,type,charcodes")] T6[,,] charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
                where T6 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontName">
            /// [length: COMPSIZE(fontTarget,fontName)]
            /// </param>
            /// <param name="fontStyle">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="charcodes">
            /// [length: COMPSIZE(numGlyphs,type,charcodes)]
            /// </param>
            /// <param name="handleMissingGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathGlyphsNV")]
            public static void PathGlyph<T2, T6>(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [InAttribute, OutAttribute, CountAttribute(Computed = "fontTarget,fontName")] ref T2 fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [InAttribute, OutAttribute, CountAttribute(Computed = "numGlyphs,type,charcodes")] ref T6 charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale)
                where T2 : struct
                where T6 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray(uint firstPathName, NvPathRendering fontTarget, int fontSize, IntPtr fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, int fontSize, [InAttribute, OutAttribute] T3[] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, int fontSize, [InAttribute, OutAttribute] T3[,] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, int fontSize, [InAttribute, OutAttribute] T3[,,] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, int fontSize, [InAttribute, OutAttribute] ref T3 fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, IntPtr fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, [InAttribute, OutAttribute] T3[] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, [InAttribute, OutAttribute] T3[,] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, [InAttribute, OutAttribute] T3[,,] fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="firstPathName">
            /// </param>
            /// <param name="fontTarget">
            /// </param>
            /// <param name="fontSize">
            /// </param>
            /// <param name="fontData">
            /// </param>
            /// <param name="faceIndex">
            /// </param>
            /// <param name="firstGlyphIndex">
            /// </param>
            /// <param name="numGlyphs">
            /// </param>
            /// <param name="pathParameterTemplate">
            /// </param>
            /// <param name="emScale">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathMemoryGlyphIndexArrayNV")]
            public static NvPathRendering PathMemoryGlyphIndexArray<T3>(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, [InAttribute, OutAttribute] ref T3 fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterfNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, float value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterfvNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] float[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterfvNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] ref float value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterfvNV")]
            public static unsafe void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] float* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameteriNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, int value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterivNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] int[] value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterivNV")]
            public static void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] ref int value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="value">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathParameterivNV")]
            public static unsafe void PathParameter(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] int* value)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="factor">
            /// </param>
            /// <param name="units">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStencilDepthOffsetNV")]
            public static void PathStencilDepthOffset(float factor, float units)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="func">
            /// </param>
            /// <param name="@ref">
            /// </param>
            /// <param name="mask">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStencilFuncNV")]
            public static void PathStencilFunc(OpenTK.Graphics.ES20.StencilFunction func, int @ref, uint mask)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="pathString">
            /// [length: length]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStringNV")]
            public static void PathString(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [CountAttribute(Parameter = "length")] IntPtr pathString)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="pathString">
            /// [length: length]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStringNV")]
            public static void PathString<T3>(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [InAttribute, OutAttribute, CountAttribute(Parameter = "length")] T3[] pathString)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="pathString">
            /// [length: length]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStringNV")]
            public static void PathString<T3>(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [InAttribute, OutAttribute, CountAttribute(Parameter = "length")] T3[,] pathString)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="pathString">
            /// [length: length]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStringNV")]
            public static void PathString<T3>(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [InAttribute, OutAttribute, CountAttribute(Parameter = "length")] T3[,,] pathString)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="length">
            /// </param>
            /// <param name="pathString">
            /// [length: length]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathStringNV")]
            public static void PathString<T3>(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [InAttribute, OutAttribute, CountAttribute(Parameter = "length")] ref T3 pathString)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte[] commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T7 coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] ref Byte commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T7 coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static unsafe void PathSubCommands(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static unsafe void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static unsafe void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static unsafe void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T7[,,] coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="commandStart">
            /// </param>
            /// <param name="commandsToDelete">
            /// </param>
            /// <param name="numCommands">
            /// </param>
            /// <param name="commands">
            /// [length: numCommands]
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCommandsNV")]
            public static unsafe void PathSubCommands<T7>(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T7 coords)
                where T7 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coordStart">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCoordsNV")]
            public static void PathSubCoords(uint path, int coordStart, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coordStart">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCoordsNV")]
            public static void PathSubCoords<T4>(uint path, int coordStart, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T4[] coords)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coordStart">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCoordsNV")]
            public static void PathSubCoords<T4>(uint path, int coordStart, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T4[,] coords)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coordStart">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCoordsNV")]
            public static void PathSubCoords<T4>(uint path, int coordStart, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] T4[,,] coords)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="coordStart">
            /// </param>
            /// <param name="numCoords">
            /// </param>
            /// <param name="coordType">
            /// </param>
            /// <param name="coords">
            /// [length: COMPSIZE(numCoords,coordType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathSubCoordsNV")]
            public static void PathSubCoords<T4>(uint path, int coordStart, int numCoords, NvPathRendering coordType, [InAttribute, OutAttribute, CountAttribute(Computed = "numCoords,coordType")] ref T4 coords)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,components)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathTexGenNV")]
            public static void PathTexGen(OpenTK.Graphics.ES20.PathColor texCoordSet, OpenTK.Graphics.ES20.PathGenMode genMode, int components, [CountAttribute(Computed = "genMode,components")] float[] coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,components)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathTexGenNV")]
            public static void PathTexGen(OpenTK.Graphics.ES20.PathColor texCoordSet, OpenTK.Graphics.ES20.PathGenMode genMode, int components, [CountAttribute(Computed = "genMode,components")] ref float coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="texCoordSet">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// [length: COMPSIZE(genMode,components)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPathTexGenNV")]
            public static unsafe void PathTexGen(OpenTK.Graphics.ES20.PathColor texCoordSet, OpenTK.Graphics.ES20.PathGenMode genMode, int components, [CountAttribute(Computed = "genMode,components")] float* coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="startSegment">
            /// </param>
            /// <param name="numSegments">
            /// </param>
            /// <param name="distance">
            /// </param>
            /// <param name="x">
            /// [length: 1]
            /// </param>
            /// <param name="y">
            /// [length: 1]
            /// </param>
            /// <param name="tangentX">
            /// [length: 1]
            /// </param>
            /// <param name="tangentY">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPointAlongPathNV")]
            public static bool PointAlongPath(uint path, int startSegment, int numSegments, float distance, [OutAttribute, CountAttribute(Count = 1)] out float x, [OutAttribute, CountAttribute(Count = 1)] out float y, [OutAttribute, CountAttribute(Count = 1)] out float tangentX, [OutAttribute, CountAttribute(Count = 1)] out float tangentY)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="startSegment">
            /// </param>
            /// <param name="numSegments">
            /// </param>
            /// <param name="distance">
            /// </param>
            /// <param name="x">
            /// [length: 1]
            /// </param>
            /// <param name="y">
            /// [length: 1]
            /// </param>
            /// <param name="tangentX">
            /// [length: 1]
            /// </param>
            /// <param name="tangentY">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glPointAlongPathNV")]
            public static unsafe bool PointAlongPath(uint path, int startSegment, int numSegments, float distance, [OutAttribute, CountAttribute(Count = 1)] float* x, [OutAttribute, CountAttribute(Count = 1)] float* y, [OutAttribute, CountAttribute(Count = 1)] float* tangentX, [OutAttribute, CountAttribute(Count = 1)] float* tangentY)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="location">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glProgramPathFragmentInputGenNV")]
            public static void ProgramPathFragmentInputGen(uint program, int location, NvPathRendering genMode, int components, float[] coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="location">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glProgramPathFragmentInputGenNV")]
            public static void ProgramPathFragmentInputGen(uint program, int location, NvPathRendering genMode, int components, ref float coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="program">
            /// </param>
            /// <param name="location">
            /// </param>
            /// <param name="genMode">
            /// </param>
            /// <param name="components">
            /// </param>
            /// <param name="coeffs">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glProgramPathFragmentInputGenNV")]
            public static unsafe void ProgramPathFragmentInputGen(uint program, int location, NvPathRendering genMode, int components, float* coeffs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static unsafe void StencilFillPathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static unsafe void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static unsafe void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static unsafe void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathInstancedNV")]
            public static unsafe void StencilFillPathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilFillPathNV")]
            public static void StencilFillPath(uint path, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static unsafe void StencilStrokePathInstanced(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static unsafe void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static unsafe void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static unsafe void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] T2[,,] paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// [length: COMPSIZE(numPaths,pathNameType,paths)]
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(numPaths,transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathInstancedNV")]
            public static unsafe void StencilStrokePathInstanced<T2>(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [InAttribute, OutAttribute, CountAttribute(Computed = "numPaths,pathNameType,paths")] ref T2 paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilStrokePathNV")]
            public static void StencilStrokePath(uint path, int reference, uint mask)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static unsafe void StencilThenCoverFillPathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static unsafe void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static unsafe void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static unsafe void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathInstancedNV")]
            public static unsafe void StencilThenCoverFillPathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="fillMode">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverFillPathNV")]
            public static void StencilThenCoverFillPath(uint path, NvPathRendering fillMode, uint mask, NvPathRendering coverMode)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static unsafe void StencilThenCoverStrokePathInstanced(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static unsafe void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static unsafe void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static unsafe void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] T2[,,] paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float[] transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, ref float transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="numPaths">
            /// </param>
            /// <param name="pathNameType">
            /// </param>
            /// <param name="paths">
            /// </param>
            /// <param name="pathBase">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathInstancedNV")]
            public static unsafe void StencilThenCoverStrokePathInstanced<T2>(int numPaths, NvPathRendering pathNameType, [InAttribute, OutAttribute] ref T2 paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="path">
            /// </param>
            /// <param name="reference">
            /// </param>
            /// <param name="mask">
            /// </param>
            /// <param name="coverMode">
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glStencilThenCoverStrokePathNV")]
            public static void StencilThenCoverStrokePath(uint path, int reference, uint mask, NvPathRendering coverMode)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="srcPath">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glTransformPathNV")]
            public static void TransformPath(uint resultPath, uint srcPath, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "transformType")] float[] transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="srcPath">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glTransformPathNV")]
            public static void TransformPath(uint resultPath, uint srcPath, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "transformType")] ref float transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="srcPath">
            /// </param>
            /// <param name="transformType">
            /// </param>
            /// <param name="transformValues">
            /// [length: COMPSIZE(transformType)]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glTransformPathNV")]
            public static unsafe void TransformPath(uint resultPath, uint srcPath, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "transformType")] float* transformValues)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="paths">
            /// [length: numPaths]
            /// </param>
            /// <param name="weights">
            /// [length: numPaths]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glWeightPathsNV")]
            public static void WeightPath(uint resultPath, int numPaths, [CountAttribute(Parameter = "numPaths")] uint[] paths, [CountAttribute(Parameter = "numPaths")] float[] weights)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="paths">
            /// [length: numPaths]
            /// </param>
            /// <param name="weights">
            /// [length: numPaths]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glWeightPathsNV")]
            public static void WeightPath(uint resultPath, int numPaths, [CountAttribute(Parameter = "numPaths")] ref uint paths, [CountAttribute(Parameter = "numPaths")] ref float weights)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_path_rendering]
            /// </summary>
            /// <param name="resultPath">
            /// </param>
            /// <param name="numPaths">
            /// </param>
            /// <param name="paths">
            /// [length: numPaths]
            /// </param>
            /// <param name="weights">
            /// [length: numPaths]
            /// </param>
            [AutoGenerated(Category = "NV_path_rendering", Version = "", EntryPoint = "glWeightPathsNV")]
            public static unsafe void WeightPath(uint resultPath, int numPaths, [CountAttribute(Parameter = "numPaths")] uint* paths, [CountAttribute(Parameter = "numPaths")] float* weights)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(66)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCopyPathNV(uint resultPath, uint srcPath);

            [Slot(75)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glCoverFillPathInstancedNV(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues);

            [Slot(76)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCoverFillPathNV(uint path, OpenTK.Graphics.ES20.PathCoverMode coverMode);

            [Slot(77)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glCoverStrokePathInstancedNV(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathCoverMode coverMode, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues);

            [Slot(78)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCoverStrokePathNV(uint path, OpenTK.Graphics.ES20.PathCoverMode coverMode);

            [Slot(96)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glDeletePathsNV(uint path, int range);

            [Slot(198)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern uint glGenPathsNV(int range);

            [Slot(250)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathColorGenfvNV(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float* value);

            [Slot(251)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathColorGenivNV(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int* value);

            [Slot(252)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathCommandsNV(uint path, [OutAttribute, CountAttribute(Computed = "path")] Byte* commands);

            [Slot(253)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathCoordsNV(uint path, [OutAttribute, CountAttribute(Computed = "path")] float* coords);

            [Slot(254)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathDashArrayNV(uint path, [OutAttribute, CountAttribute(Computed = "path")] float* dashArray);

            [Slot(255)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern float glGetPathLengthNV(uint path, int startSegment, int numSegments);

            [Slot(256)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathMetricRangeNV(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, uint firstPathName, int numPaths, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics);

            [Slot(257)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathMetricsNV(OpenTK.Graphics.ES20.PathMetricMask metricQueryMask, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int stride, [OutAttribute, CountAttribute(Computed = "metricQueryMask,numPaths,stride")] float* metrics);

            [Slot(258)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathParameterfvNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] float* value);

            [Slot(259)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathParameterivNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, [OutAttribute, CountAttribute(Count = 4)] int* value);

            [Slot(260)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathSpacingNV(OpenTK.Graphics.ES20.PathListMode pathListMode, int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, float advanceScale, float kerningScale, OpenTK.Graphics.ES20.PathTransformType transformType, [OutAttribute, CountAttribute(Computed = "pathListMode,numPaths")] float* returnedSpacing);

            [Slot(261)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathTexGenfvNV(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] float* value);

            [Slot(262)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetPathTexGenivNV(OpenTK.Graphics.ES20.TextureUnit texCoordSet, OpenTK.Graphics.ES20.PathGenMode pname, [OutAttribute, CountAttribute(Computed = "pname")] int* value);

            [Slot(280)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramResourcefvNV(uint program, OpenTK.Graphics.ES20.ProgramInterface programInterface, uint index, int propCount, NvPathRendering* props, int bufSize, [OutAttribute] int* length, [OutAttribute] float* @params);

            [Slot(328)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glInterpolatePathsNV(uint resultPath, uint pathA, uint pathB, float weight);

            [Slot(338)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsPathNV(uint path);

            [Slot(339)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsPointInFillPathNV(uint path, uint mask, float x, float y);

            [Slot(340)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsPointInStrokePathNV(uint path, float x, float y);

            [Slot(361)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixLoad3x2fNV(NvPathRendering matrixMode, float* m);

            [Slot(362)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixLoad3x3fNV(NvPathRendering matrixMode, float* m);

            [Slot(366)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixLoadTranspose3x3fNV(NvPathRendering matrixMode, float* m);

            [Slot(369)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixMult3x2fNV(NvPathRendering matrixMode, float* m);

            [Slot(370)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixMult3x3fNV(NvPathRendering matrixMode, float* m);

            [Slot(373)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMatrixMultTranspose3x3fNV(NvPathRendering matrixMode, float* m);

            [Slot(402)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathColorGenNV(OpenTK.Graphics.ES20.PathColor color, OpenTK.Graphics.ES20.PathGenMode genMode, NvPathRendering colorFormat, [CountAttribute(Computed = "genMode,colorFormat")] float* coeffs);

            [Slot(403)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathCommandsNV(uint path, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords);

            [Slot(404)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathCoordsNV(uint path, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords);

            [Slot(405)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathCoverDepthFuncNV(OpenTK.Graphics.ES20.DepthFunction func);

            [Slot(406)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathDashArrayNV(uint path, int dashCount, [CountAttribute(Parameter = "dashCount")] float* dashArray);

            [Slot(407)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathFogGenNV(OpenTK.Graphics.ES20.PathGenMode genMode);

            [Slot(408)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern NvPathRendering glPathGlyphIndexArrayNV(uint firstPathName, NvPathRendering fontTarget, IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);

            [Slot(409)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern NvPathRendering glPathGlyphIndexRangeNV(NvPathRendering fontTarget, IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount);

            [Slot(410)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathGlyphRangeNV(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [CountAttribute(Computed = "fontTarget,fontName")] IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);

            [Slot(411)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathGlyphsNV(uint firstPathName, OpenTK.Graphics.ES20.PathFontTarget fontTarget, [CountAttribute(Computed = "fontTarget,fontName")] IntPtr fontName, OpenTK.Graphics.ES20.PathFontStyle fontStyle, int numGlyphs, OpenTK.Graphics.ES20.PathElementType type, [CountAttribute(Computed = "numGlyphs,type,charcodes")] IntPtr charcodes, OpenTK.Graphics.ES20.PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);

            [Slot(412)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern NvPathRendering glPathMemoryGlyphIndexArrayNV(uint firstPathName, NvPathRendering fontTarget, IntPtr fontSize, IntPtr fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);

            [Slot(413)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathParameterfNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, float value);

            [Slot(414)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathParameterfvNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] float* value);

            [Slot(415)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathParameteriNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, int value);

            [Slot(416)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathParameterivNV(uint path, OpenTK.Graphics.ES20.PathParameter pname, [CountAttribute(Computed = "pname")] int* value);

            [Slot(417)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathStencilDepthOffsetNV(float factor, float units);

            [Slot(418)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathStencilFuncNV(OpenTK.Graphics.ES20.StencilFunction func, int @ref, uint mask);

            [Slot(419)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathStringNV(uint path, OpenTK.Graphics.ES20.PathStringFormat format, int length, [CountAttribute(Parameter = "length")] IntPtr pathString);

            [Slot(420)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathSubCommandsNV(uint path, int commandStart, int commandsToDelete, int numCommands, [CountAttribute(Parameter = "numCommands")] Byte* commands, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords);

            [Slot(421)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glPathSubCoordsNV(uint path, int coordStart, int numCoords, NvPathRendering coordType, [CountAttribute(Computed = "numCoords,coordType")] IntPtr coords);

            [Slot(422)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glPathTexGenNV(OpenTK.Graphics.ES20.PathColor texCoordSet, OpenTK.Graphics.ES20.PathGenMode genMode, int components, [CountAttribute(Computed = "genMode,components")] float* coeffs);

            [Slot(424)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe byte glPointAlongPathNV(uint path, int startSegment, int numSegments, float distance, [OutAttribute, CountAttribute(Count = 1)] float* x, [OutAttribute, CountAttribute(Count = 1)] float* y, [OutAttribute, CountAttribute(Count = 1)] float* tangentX, [OutAttribute, CountAttribute(Count = 1)] float* tangentY);

            [Slot(435)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glProgramPathFragmentInputGenNV(uint program, int location, NvPathRendering genMode, int components, float* coeffs);

            [Slot(531)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glStencilFillPathInstancedNV(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues);

            [Slot(532)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glStencilFillPathNV(uint path, OpenTK.Graphics.ES20.PathFillMode fillMode, uint mask);

            [Slot(539)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glStencilStrokePathInstancedNV(int numPaths, OpenTK.Graphics.ES20.PathElementType pathNameType, [CountAttribute(Computed = "numPaths,pathNameType,paths")] IntPtr paths, uint pathBase, int reference, uint mask, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "numPaths,transformType")] float* transformValues);

            [Slot(540)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glStencilStrokePathNV(uint path, int reference, uint mask);

            [Slot(541)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glStencilThenCoverFillPathInstancedNV(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, NvPathRendering fillMode, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues);

            [Slot(542)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glStencilThenCoverFillPathNV(uint path, NvPathRendering fillMode, uint mask, NvPathRendering coverMode);

            [Slot(543)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glStencilThenCoverStrokePathInstancedNV(int numPaths, NvPathRendering pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, NvPathRendering coverMode, NvPathRendering transformType, float* transformValues);

            [Slot(544)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glStencilThenCoverStrokePathNV(uint path, int reference, uint mask, NvPathRendering coverMode);

            [Slot(584)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glTransformPathNV(uint resultPath, uint srcPath, OpenTK.Graphics.ES20.PathTransformType transformType, [CountAttribute(Computed = "transformType")] float* transformValues);

            [Slot(660)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glWeightPathsNV(uint resultPath, int numPaths, [CountAttribute(Parameter = "numPaths")] uint* paths, [CountAttribute(Parameter = "numPaths")] float* weights);
        }
    }
}
