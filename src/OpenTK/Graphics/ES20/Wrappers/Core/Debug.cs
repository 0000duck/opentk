//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.ES20
{
    public sealed partial class GL
    {
        /// <summary>
        /// </summary>
        /// <param name="callback">
        /// </param>
        /// <param name="userParam">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageCallback")]
        public static void DebugMessageCallback(DebugProc callback, IntPtr userParam)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="callback">
        /// </param>
        /// <param name="userParam">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageCallback")]
        public static void DebugMessageCallback<T1>(DebugProc callback, [InAttribute, OutAttribute] T1[] userParam)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="callback">
        /// </param>
        /// <param name="userParam">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageCallback")]
        public static void DebugMessageCallback<T1>(DebugProc callback, [InAttribute, OutAttribute] T1[,] userParam)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="callback">
        /// </param>
        /// <param name="userParam">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageCallback")]
        public static void DebugMessageCallback<T1>(DebugProc callback, [InAttribute, OutAttribute] T1[,,] userParam)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="callback">
        /// </param>
        /// <param name="userParam">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageCallback")]
        public static void DebugMessageCallback<T1>(DebugProc callback, [InAttribute, OutAttribute] ref T1 userParam)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="source">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="severity">
        /// </param>
        /// <param name="count">
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="enabled">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageControl")]
        public static void DebugMessageControl(OpenTK.Graphics.ES20.DebugSourceControl source, OpenTK.Graphics.ES20.DebugTypeControl type, OpenTK.Graphics.ES20.DebugSeverityControl severity, int count, [CountAttribute(Parameter = "count")] uint[] ids, bool enabled)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="source">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="severity">
        /// </param>
        /// <param name="count">
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="enabled">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageControl")]
        public static void DebugMessageControl(OpenTK.Graphics.ES20.DebugSourceControl source, OpenTK.Graphics.ES20.DebugTypeControl type, OpenTK.Graphics.ES20.DebugSeverityControl severity, int count, [CountAttribute(Parameter = "count")] ref uint ids, bool enabled)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="source">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="severity">
        /// </param>
        /// <param name="count">
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="enabled">
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageControl")]
        public static unsafe void DebugMessageControl(OpenTK.Graphics.ES20.DebugSourceControl source, OpenTK.Graphics.ES20.DebugTypeControl type, OpenTK.Graphics.ES20.DebugSeverityControl severity, int count, [CountAttribute(Parameter = "count")] uint* ids, bool enabled)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="source">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="id">
        /// </param>
        /// <param name="severity">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="buf">
        /// [length: COMPSIZE(buf,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glDebugMessageInsert")]
        public static void DebugMessageInsert(OpenTK.Graphics.ES20.DebugSourceExternal source, OpenTK.Graphics.ES20.DebugType type, uint id, OpenTK.Graphics.ES20.DebugSeverity severity, int length, [CountAttribute(Computed = "buf,length")] String buf)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="count">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="sources">
        /// [length: count]
        /// </param>
        /// <param name="types">
        /// [length: count]
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="severities">
        /// [length: count]
        /// </param>
        /// <param name="lengths">
        /// [length: count]
        /// </param>
        /// <param name="messageLog">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetDebugMessageLog")]
        public static uint GetDebugMessageLog(uint count, int bufSize, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSourceExternal[] sources, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugType[] types, [OutAttribute, CountAttribute(Parameter = "count")] uint[] ids, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSeverity[] severities, [OutAttribute, CountAttribute(Parameter = "count")] int[] lengths, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String messageLog)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="count">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="sources">
        /// [length: count]
        /// </param>
        /// <param name="types">
        /// [length: count]
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="severities">
        /// [length: count]
        /// </param>
        /// <param name="lengths">
        /// [length: count]
        /// </param>
        /// <param name="messageLog">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetDebugMessageLog")]
        public static uint GetDebugMessageLog(uint count, int bufSize, [OutAttribute, CountAttribute(Parameter = "count")] out OpenTK.Graphics.ES20.DebugSourceExternal sources, [OutAttribute, CountAttribute(Parameter = "count")] out OpenTK.Graphics.ES20.DebugType types, [OutAttribute, CountAttribute(Parameter = "count")] out uint ids, [OutAttribute, CountAttribute(Parameter = "count")] out OpenTK.Graphics.ES20.DebugSeverity severities, [OutAttribute, CountAttribute(Parameter = "count")] out int lengths, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String messageLog)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="count">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="sources">
        /// [length: count]
        /// </param>
        /// <param name="types">
        /// [length: count]
        /// </param>
        /// <param name="ids">
        /// [length: count]
        /// </param>
        /// <param name="severities">
        /// [length: count]
        /// </param>
        /// <param name="lengths">
        /// [length: count]
        /// </param>
        /// <param name="messageLog">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetDebugMessageLog")]
        public static unsafe uint GetDebugMessageLog(uint count, int bufSize, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSourceExternal* sources, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugType* types, [OutAttribute, CountAttribute(Parameter = "count")] uint* ids, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSeverity* severities, [OutAttribute, CountAttribute(Parameter = "count")] int* lengths, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String messageLog)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="identifier">
        /// </param>
        /// <param name="name">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectLabel")]
        public static void GetObjectLabel(OpenTK.Graphics.ES20.ObjectLabelIdentifier identifier, uint name, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="identifier">
        /// </param>
        /// <param name="name">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectLabel")]
        public static unsafe void GetObjectLabel(OpenTK.Graphics.ES20.ObjectLabelIdentifier identifier, uint name, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static void GetObjectPtrLabel(IntPtr ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static unsafe void GetObjectPtrLabel(IntPtr ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static unsafe void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static unsafe void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,,] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static unsafe void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,,] ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] ref T0 ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] out int length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="length">
        /// [length: 1]
        /// </param>
        /// <param name="label">
        /// [length: bufSize]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetObjectPtrLabel")]
        public static unsafe void GetObjectPtrLabel<T0>([InAttribute, OutAttribute] ref T0 ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] out String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="pname">
        /// </param>
        /// <param name="@params">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetPointerv")]
        public static void GetPointer(OpenTK.Graphics.ES20.GetPointervPName pname, [OutAttribute, CountAttribute(Count = 1)] IntPtr @params)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="pname">
        /// </param>
        /// <param name="@params">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetPointerv")]
        public static void GetPointer<T1>(OpenTK.Graphics.ES20.GetPointervPName pname, [InAttribute, OutAttribute, CountAttribute(Count = 1)] T1[] @params)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="pname">
        /// </param>
        /// <param name="@params">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetPointerv")]
        public static void GetPointer<T1>(OpenTK.Graphics.ES20.GetPointervPName pname, [InAttribute, OutAttribute, CountAttribute(Count = 1)] T1[,] @params)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="pname">
        /// </param>
        /// <param name="@params">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetPointerv")]
        public static void GetPointer<T1>(OpenTK.Graphics.ES20.GetPointervPName pname, [InAttribute, OutAttribute, CountAttribute(Count = 1)] T1[,,] @params)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="pname">
        /// </param>
        /// <param name="@params">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glGetPointerv")]
        public static void GetPointer<T1>(OpenTK.Graphics.ES20.GetPointervPName pname, [InAttribute, OutAttribute, CountAttribute(Count = 1)] ref T1 @params)
            where T1 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="identifier">
        /// </param>
        /// <param name="name">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectLabel")]
        public static void ObjectLabel(OpenTK.Graphics.ES20.ObjectLabelIdentifier identifier, uint name, int length, [CountAttribute(Computed = "label,length")] String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectPtrLabel")]
        public static void ObjectPtrLabel(IntPtr ptr, int length, [CountAttribute(Computed = "label,length")] String label)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectPtrLabel")]
        public static void ObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[] ptr, int length, [CountAttribute(Computed = "label,length")] String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectPtrLabel")]
        public static void ObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,] ptr, int length, [CountAttribute(Computed = "label,length")] String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectPtrLabel")]
        public static void ObjectPtrLabel<T0>([InAttribute, OutAttribute] T0[,,] ptr, int length, [CountAttribute(Computed = "label,length")] String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="ptr">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="label">
        /// [length: COMPSIZE(label,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glObjectPtrLabel")]
        public static void ObjectPtrLabel<T0>([InAttribute, OutAttribute] ref T0 ptr, int length, [CountAttribute(Computed = "label,length")] String label)
            where T0 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glPopDebugGroup")]
        public static void PopDebugGroup()
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// </summary>
        /// <param name="source">
        /// </param>
        /// <param name="id">
        /// </param>
        /// <param name="length">
        /// </param>
        /// <param name="message">
        /// [length: COMPSIZE(message,length)]
        /// </param>
        [AutoGenerated(Category = "KHR_debug", Version = "", EntryPoint = "glPushDebugGroup")]
        public static void PushDebugGroup(OpenTK.Graphics.ES20.DebugSource source, uint id, int length, [CountAttribute(Computed = "message,length")] String message)
        {
            throw new BindingsNotRewrittenException();
        }

        [Slot(86)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glDebugMessageCallback(DebugProc callback, IntPtr userParam);

        [Slot(88)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glDebugMessageControl(OpenTK.Graphics.ES20.DebugSourceControl source, OpenTK.Graphics.ES20.DebugTypeControl type, OpenTK.Graphics.ES20.DebugSeverityControl severity, int count, [CountAttribute(Parameter = "count")] uint* ids, bool enabled);

        [Slot(90)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glDebugMessageInsert(OpenTK.Graphics.ES20.DebugSourceExternal source, OpenTK.Graphics.ES20.DebugType type, uint id, OpenTK.Graphics.ES20.DebugSeverity severity, int length, [CountAttribute(Computed = "buf,length")] IntPtr buf);

        [Slot(214)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe uint glGetDebugMessageLog(uint count, int bufSize, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSourceExternal* sources, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugType* types, [OutAttribute, CountAttribute(Parameter = "count")] uint* ids, [OutAttribute, CountAttribute(Parameter = "count")] OpenTK.Graphics.ES20.DebugSeverity* severities, [OutAttribute, CountAttribute(Parameter = "count")] int* lengths, [OutAttribute, CountAttribute(Parameter = "bufSize")] IntPtr messageLog);

        [Slot(245)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetObjectLabel(OpenTK.Graphics.ES20.ObjectLabelIdentifier identifier, uint name, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] IntPtr label);

        [Slot(248)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetObjectPtrLabel(IntPtr ptr, int bufSize, [OutAttribute, CountAttribute(Count = 1)] int* length, [OutAttribute, CountAttribute(Parameter = "bufSize")] IntPtr label);

        [Slot(273)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetPointerv(OpenTK.Graphics.ES20.GetPointervPName pname, [OutAttribute, CountAttribute(Count = 1)] IntPtr @params);

        [Slot(396)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glObjectLabel(OpenTK.Graphics.ES20.ObjectLabelIdentifier identifier, uint name, int length, [CountAttribute(Computed = "label,length")] IntPtr label);

        [Slot(398)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glObjectPtrLabel(IntPtr ptr, int length, [CountAttribute(Computed = "label,length")] IntPtr label);

        [Slot(428)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glPopDebugGroup();

        [Slot(489)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glPushDebugGroup(OpenTK.Graphics.ES20.DebugSource source, uint id, int length, [CountAttribute(Computed = "message,length")] IntPtr message);
    }
}
