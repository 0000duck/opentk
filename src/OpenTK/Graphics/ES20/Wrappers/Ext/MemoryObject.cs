//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.ES20
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "MemoryObject" in the extension "Ext".
        /// </summary>
        public static partial class Ext
        {
            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glBufferStorageMemEXT")]
            public static void BufferStorageMem(OpenTK.Graphics.ES20.BufferTargetArb target, int size, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glBufferStorageMemEXT")]
            public static void BufferStorageMem(OpenTK.Graphics.ES20.BufferTargetArb target, IntPtr size, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glCreateMemoryObjectsEXT")]
            public static void CreateMemoryObjects(int n, [OutAttribute] uint[] memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glCreateMemoryObjectsEXT")]
            public static void CreateMemoryObjects(int n, [OutAttribute] out uint memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glCreateMemoryObjectsEXT")]
            public static unsafe void CreateMemoryObjects(int n, [OutAttribute] uint* memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObjects">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glDeleteMemoryObjectsEXT")]
            public static void DeleteMemoryObject([CountAttribute(Parameter = "n")] uint memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glDeleteMemoryObjectsEXT")]
            public static void DeleteMemoryObjects(int n, [CountAttribute(Parameter = "n")] uint[] memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glDeleteMemoryObjectsEXT")]
            public static void DeleteMemoryObjects(int n, [CountAttribute(Parameter = "n")] ref uint memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="memoryObjects">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glDeleteMemoryObjectsEXT")]
            public static unsafe void DeleteMemoryObjects(int n, [CountAttribute(Parameter = "n")] uint* memoryObjects)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glGetMemoryObjectParameterivEXT")]
            public static void GetMemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, [OutAttribute] int[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glGetMemoryObjectParameterivEXT")]
            public static void GetMemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, [OutAttribute] out int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glGetMemoryObjectParameterivEXT")]
            public static unsafe void GetMemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, [OutAttribute] int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glIsMemoryObjectEXT")]
            public static bool IsMemoryObject(uint memoryObject)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glMemoryObjectParameterivEXT")]
            public static void MemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, int[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glMemoryObjectParameterivEXT")]
            public static void MemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, ref int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="memoryObject">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glMemoryObjectParameterivEXT")]
            public static unsafe void MemoryObjectParameter(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glNamedBufferStorageMemEXT")]
            public static void NamedBufferStorageMem(uint buffer, int size, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glNamedBufferStorageMemEXT")]
            public static void NamedBufferStorageMem(uint buffer, IntPtr size, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTexStorageMem1DEXT")]
            public static void TexStorageMem1D(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTexStorageMem2DEXT")]
            public static void TexStorageMem2D(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, int height, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="samples">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="fixedSampleLocations">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTexStorageMem2DMultisampleEXT")]
            public static void TexStorageMem2DMultisample(OpenTK.Graphics.ES20.TextureTarget target, int samples, ExtMemoryObject internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTexStorageMem3DEXT")]
            public static void TexStorageMem3D(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, int height, int depth, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="samples">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="fixedSampleLocations">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTexStorageMem3DMultisampleEXT")]
            public static void TexStorageMem3DMultisample(OpenTK.Graphics.ES20.TextureTarget target, int samples, ExtMemoryObject internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="texture">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTextureStorageMem1DEXT")]
            public static void TextureStorageMem1D(uint texture, int levels, ExtMemoryObject internalFormat, int width, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="texture">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTextureStorageMem2DEXT")]
            public static void TextureStorageMem2D(uint texture, int levels, ExtMemoryObject internalFormat, int width, int height, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="texture">
            /// </param>
            /// <param name="samples">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="fixedSampleLocations">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTextureStorageMem2DMultisampleEXT")]
            public static void TextureStorageMem2DMultisample(uint texture, int samples, ExtMemoryObject internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="texture">
            /// </param>
            /// <param name="levels">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTextureStorageMem3DEXT")]
            public static void TextureStorageMem3D(uint texture, int levels, ExtMemoryObject internalFormat, int width, int height, int depth, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_memory_object]
            /// </summary>
            /// <param name="texture">
            /// </param>
            /// <param name="samples">
            /// </param>
            /// <param name="internalFormat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="fixedSampleLocations">
            /// </param>
            /// <param name="memory">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "EXT_memory_object", Version = "", EntryPoint = "glTextureStorageMem3DMultisampleEXT")]
            public static void TextureStorageMem3DMultisample(uint texture, int samples, ExtMemoryObject internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(42)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glBufferStorageMemEXT(OpenTK.Graphics.ES20.BufferTargetArb target, IntPtr size, uint memory, ulong offset);

            [Slot(79)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glCreateMemoryObjectsEXT(int n, [OutAttribute] uint* memoryObjects);

            [Slot(95)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeleteMemoryObjectsEXT(int n, [CountAttribute(Parameter = "n")] uint* memoryObjects);

            [Slot(235)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetMemoryObjectParameterivEXT(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, [OutAttribute] int* @params);

            [Slot(337)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsMemoryObjectEXT(uint memoryObject);

            [Slot(386)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMemoryObjectParameterivEXT(uint memoryObject, OpenTK.Graphics.ES20.MemoryObjectParameterName pname, int* @params);

            [Slot(394)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glNamedBufferStorageMemEXT(uint buffer, IntPtr size, uint memory, ulong offset);

            [Slot(566)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexStorageMem1DEXT(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, uint memory, ulong offset);

            [Slot(567)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexStorageMem2DEXT(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, int height, uint memory, ulong offset);

            [Slot(568)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexStorageMem2DMultisampleEXT(OpenTK.Graphics.ES20.TextureTarget target, int samples, ExtMemoryObject internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);

            [Slot(569)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexStorageMem3DEXT(OpenTK.Graphics.ES20.TextureTarget target, int levels, ExtMemoryObject internalFormat, int width, int height, int depth, uint memory, ulong offset);

            [Slot(570)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexStorageMem3DMultisampleEXT(OpenTK.Graphics.ES20.TextureTarget target, int samples, ExtMemoryObject internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);

            [Slot(577)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTextureStorageMem1DEXT(uint texture, int levels, ExtMemoryObject internalFormat, int width, uint memory, ulong offset);

            [Slot(578)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTextureStorageMem2DEXT(uint texture, int levels, ExtMemoryObject internalFormat, int width, int height, uint memory, ulong offset);

            [Slot(579)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTextureStorageMem2DMultisampleEXT(uint texture, int samples, ExtMemoryObject internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);

            [Slot(580)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTextureStorageMem3DEXT(uint texture, int levels, ExtMemoryObject internalFormat, int width, int height, int depth, uint memory, ulong offset);

            [Slot(581)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTextureStorageMem3DMultisampleEXT(uint texture, int samples, ExtMemoryObject internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);
        }
    }
}
