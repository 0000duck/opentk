//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.ES20
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "Texture3D" in the extension "Oes".
        /// </summary>
        public static partial class Oes
        {
            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexImage3DOES")]
            public static void CompressedTexImage3D(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [CountAttribute(Parameter = "imageSize")] IntPtr data)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexImage3DOES")]
            public static void CompressedTexImage3D<T8>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T8[] data)
                where T8 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexImage3DOES")]
            public static void CompressedTexImage3D<T8>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T8[,] data)
                where T8 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexImage3DOES")]
            public static void CompressedTexImage3D<T8>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T8[,,] data)
                where T8 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexImage3DOES")]
            public static void CompressedTexImage3D<T8>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] ref T8 data)
                where T8 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexSubImage3DOES")]
            public static void CompressedTexSubImage3D(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [CountAttribute(Parameter = "imageSize")] IntPtr data)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexSubImage3DOES")]
            public static void CompressedTexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T10[] data)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexSubImage3DOES")]
            public static void CompressedTexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T10[,] data)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexSubImage3DOES")]
            public static void CompressedTexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] T10[,,] data)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="imageSize">
            /// </param>
            /// <param name="data">
            /// [length: imageSize]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCompressedTexSubImage3DOES")]
            public static void CompressedTexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [InAttribute, OutAttribute, CountAttribute(Parameter = "imageSize")] ref T10 data)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glCopyTexSubImage3DOES")]
            public static void CopyTexSubImage3D(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="attachment">
            /// </param>
            /// <param name="textarget">
            /// </param>
            /// <param name="texture">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glFramebufferTexture3DOES")]
            public static void FramebufferTexture3D(OpenTK.Graphics.ES20.FramebufferTarget target, OpenTK.Graphics.ES20.FramebufferAttachment attachment, OpenTK.Graphics.ES20.TextureTarget textarget, uint texture, int level, int zoffset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexImage3DOES")]
            public static void TexImage3D(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [CountAttribute(Computed = "format,type,width,height,depth")] IntPtr pixels)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexImage3DOES")]
            public static void TexImage3D<T9>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T9[] pixels)
                where T9 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexImage3DOES")]
            public static void TexImage3D<T9>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T9[,] pixels)
                where T9 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexImage3DOES")]
            public static void TexImage3D<T9>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T9[,,] pixels)
                where T9 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="internalformat">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="border">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexImage3DOES")]
            public static void TexImage3D<T9>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] ref T9 pixels)
                where T9 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexSubImage3DOES")]
            public static void TexSubImage3D(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [CountAttribute(Computed = "format,type,width,height,depth")] IntPtr pixels)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexSubImage3DOES")]
            public static void TexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T10[] pixels)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexSubImage3DOES")]
            public static void TexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T10[,] pixels)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexSubImage3DOES")]
            public static void TexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] T10[,,] pixels)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: OES_texture_3D]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="level">
            /// </param>
            /// <param name="xoffset">
            /// </param>
            /// <param name="yoffset">
            /// </param>
            /// <param name="zoffset">
            /// </param>
            /// <param name="width">
            /// </param>
            /// <param name="height">
            /// </param>
            /// <param name="depth">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="pixels">
            /// [length: COMPSIZE(format,type,width,height,depth)]
            /// </param>
            [AutoGenerated(Category = "OES_texture_3D", Version = "", EntryPoint = "glTexSubImage3DOES")]
            public static void TexSubImage3D<T10>(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type,width,height,depth")] ref T10 pixels)
                where T10 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(59)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCompressedTexImage3DOES(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.CompressedInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [CountAttribute(Parameter = "imageSize")] IntPtr data);

            [Slot(61)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCompressedTexSubImage3DOES(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, int imageSize, [CountAttribute(Parameter = "imageSize")] IntPtr data);

            [Slot(69)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCopyTexSubImage3DOES(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);

            [Slot(187)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glFramebufferTexture3DOES(OpenTK.Graphics.ES20.FramebufferTarget target, OpenTK.Graphics.ES20.FramebufferAttachment attachment, OpenTK.Graphics.ES20.TextureTarget textarget, uint texture, int level, int zoffset);

            [Slot(552)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexImage3DOES(OpenTK.Graphics.ES20.TextureTarget3d target, int level, OpenTK.Graphics.ES20.TextureComponentCount internalformat, int width, int height, int depth, int border, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [CountAttribute(Computed = "format,type,width,height,depth")] IntPtr pixels);

            [Slot(572)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexSubImage3DOES(OpenTK.Graphics.ES20.TextureTarget3d target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.ES20.PixelFormat format, OpenTK.Graphics.ES20.PixelType type, [CountAttribute(Computed = "format,type,width,height,depth")] IntPtr pixels);
        }
    }
}
