//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "PolynomialFfd" in the extension "Sgix".
        /// </summary>
        public static partial class Sgix
        {
            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="mask">
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformSGIX")]
            public static void Deform(OpenTK.Graphics.OpenGL.FfdMaskSgix mask)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3dSGIX")]
            public static void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] double[] points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3dSGIX")]
            public static void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] ref double points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3dSGIX")]
            public static unsafe void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] double* points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3fSGIX")]
            public static void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] float[] points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3fSGIX")]
            public static void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] ref float points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="u1">
            /// </param>
            /// <param name="u2">
            /// </param>
            /// <param name="ustride">
            /// </param>
            /// <param name="uorder">
            /// </param>
            /// <param name="v1">
            /// </param>
            /// <param name="v2">
            /// </param>
            /// <param name="vstride">
            /// </param>
            /// <param name="vorder">
            /// </param>
            /// <param name="w1">
            /// </param>
            /// <param name="w2">
            /// </param>
            /// <param name="wstride">
            /// </param>
            /// <param name="worder">
            /// </param>
            /// <param name="points">
            /// [length: COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)]
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glDeformationMap3fSGIX")]
            public static unsafe void DeformationMap3(OpenTK.Graphics.OpenGL.FfdTargetSgix target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] float* points)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: SGIX_polynomial_ffd]
            /// </summary>
            /// <param name="mask">
            /// </param>
            [AutoGenerated(Category = "SGIX_polynomial_ffd", Version = "", EntryPoint = "glLoadIdentityDeformationMapSGIX")]
            public static void LoadIdentityDeformationMap(OpenTK.Graphics.OpenGL.FfdMaskSgix mask)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(403)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glDeformSGIX(OpenTK.Graphics.OpenGL.FfdMaskSgix mask);

            [Slot(401)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeformationMap3dSGIX(OpenTK.Graphics.OpenGL.FfdTargetSgix target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] double* points);

            [Slot(402)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeformationMap3fSGIX(OpenTK.Graphics.OpenGL.FfdTargetSgix target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, [CountAttribute(Computed = "target,ustride,uorder,vstride,vorder,wstride,worder")] float* points);

            [Slot(1292)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glLoadIdentityDeformationMapSGIX(OpenTK.Graphics.OpenGL.FfdMaskSgix mask);
        }
    }
}
