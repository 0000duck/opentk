//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP3ui")]
        public static void ColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP3uiv")]
        public static void ColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP3uiv")]
        public static unsafe void ColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP4ui")]
        public static void ColorP4(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP4uiv")]
        public static void ColorP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glColorP4uiv")]
        public static unsafe void ColorP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP1ui")]
        public static void MultiTexCoordP1(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP1uiv")]
        public static void MultiTexCoordP1(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP1uiv")]
        public static unsafe void MultiTexCoordP1(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP2ui")]
        public static void MultiTexCoordP2(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP2uiv")]
        public static void MultiTexCoordP2(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP2uiv")]
        public static unsafe void MultiTexCoordP2(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP3ui")]
        public static void MultiTexCoordP3(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP3uiv")]
        public static void MultiTexCoordP3(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP3uiv")]
        public static unsafe void MultiTexCoordP3(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP4ui")]
        public static void MultiTexCoordP4(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP4uiv")]
        public static void MultiTexCoordP4(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="texture">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glMultiTexCoordP4uiv")]
        public static unsafe void MultiTexCoordP4(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glNormalP3ui")]
        public static void NormalP3(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glNormalP3uiv")]
        public static void NormalP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glNormalP3uiv")]
        public static unsafe void NormalP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glSecondaryColorP3ui")]
        public static void SecondaryColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glSecondaryColorP3uiv")]
        public static void SecondaryColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="color">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glSecondaryColorP3uiv")]
        public static unsafe void SecondaryColorP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP1ui")]
        public static void TexCoordP1(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP1uiv")]
        public static void TexCoordP1(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP1uiv")]
        public static unsafe void TexCoordP1(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP2ui")]
        public static void TexCoordP2(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP2uiv")]
        public static void TexCoordP2(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP2uiv")]
        public static unsafe void TexCoordP2(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP3ui")]
        public static void TexCoordP3(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP3uiv")]
        public static void TexCoordP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP3uiv")]
        public static unsafe void TexCoordP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP4ui")]
        public static void TexCoordP4(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP4uiv")]
        public static void TexCoordP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="coords">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glTexCoordP4uiv")]
        public static unsafe void TexCoordP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP1ui")]
        public static void VertexAttribP1(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP1uiv")]
        public static void VertexAttribP1(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP1uiv")]
        public static unsafe void VertexAttribP1(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP2ui")]
        public static void VertexAttribP2(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP2uiv")]
        public static void VertexAttribP2(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP2uiv")]
        public static unsafe void VertexAttribP2(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP3ui")]
        public static void VertexAttribP3(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP3uiv")]
        public static void VertexAttribP3(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP3uiv")]
        public static unsafe void VertexAttribP3(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP4ui")]
        public static void VertexAttribP4(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP4uiv")]
        public static void VertexAttribP4(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="index">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="normalized">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexAttribP4uiv")]
        public static unsafe void VertexAttribP4(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP2ui")]
        public static void VertexP2(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP2uiv")]
        public static void VertexP2(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP2uiv")]
        public static unsafe void VertexP2(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP3ui")]
        public static void VertexP3(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP3uiv")]
        public static void VertexP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP3uiv")]
        public static unsafe void VertexP3(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP4ui")]
        public static void VertexP4(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP4uiv")]
        public static void VertexP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] ref uint value)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v3.3 or ARB_vertex_type_2_10_10_10_rev|VERSION_3_3]
        /// </summary>
        /// <param name="type">
        /// </param>
        /// <param name="value">
        /// [length: 1]
        /// </param>
        [AutoGenerated(Category = "ARB_vertex_type_2_10_10_10_rev|VERSION_3_3", Version = "3.3", EntryPoint = "glVertexP4uiv")]
        public static unsafe void VertexP4(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value)
        {
            throw new BindingsNotRewrittenException();
        }

        [Slot(249)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glColorP3ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color);

        [Slot(250)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glColorP3uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color);

        [Slot(251)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glColorP4ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color);

        [Slot(252)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glColorP4uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color);

        [Slot(1512)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glMultiTexCoordP1ui(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(1513)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glMultiTexCoordP1uiv(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(1514)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glMultiTexCoordP2ui(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(1515)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glMultiTexCoordP2uiv(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(1516)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glMultiTexCoordP3ui(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(1517)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glMultiTexCoordP3uiv(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(1518)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glMultiTexCoordP4ui(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(1519)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glMultiTexCoordP4uiv(OpenTK.Graphics.OpenGL.TextureUnit texture, OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(1618)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glNormalP3ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(1619)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glNormalP3uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(2083)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glSecondaryColorP3ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint color);

        [Slot(2084)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glSecondaryColorP3uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* color);

        [Slot(2237)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glTexCoordP1ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(2238)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glTexCoordP1uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(2239)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glTexCoordP2ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(2240)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glTexCoordP2uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(2241)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glTexCoordP3ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(2242)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glTexCoordP3uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(2243)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glTexCoordP4ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint coords);

        [Slot(2244)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glTexCoordP4uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* coords);

        [Slot(2791)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexAttribP1ui(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value);

        [Slot(2792)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexAttribP1uiv(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value);

        [Slot(2793)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexAttribP2ui(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value);

        [Slot(2794)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexAttribP2uiv(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value);

        [Slot(2795)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexAttribP3ui(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value);

        [Slot(2796)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexAttribP3uiv(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value);

        [Slot(2797)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexAttribP4ui(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, uint value);

        [Slot(2798)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexAttribP4uiv(uint index, OpenTK.Graphics.OpenGL.PackedPointerType type, bool normalized, [CountAttribute(Count = 1)] uint* value);

        [Slot(2825)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexP2ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value);

        [Slot(2826)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexP2uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value);

        [Slot(2827)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexP3ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value);

        [Slot(2828)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexP3uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value);

        [Slot(2829)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glVertexP4ui(OpenTK.Graphics.OpenGL.PackedPointerType type, uint value);

        [Slot(2830)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glVertexP4uiv(OpenTK.Graphics.OpenGL.PackedPointerType type, [CountAttribute(Count = 1)] uint* value);
    }
}
