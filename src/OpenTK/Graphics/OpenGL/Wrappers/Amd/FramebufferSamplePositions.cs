//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "FramebufferSamplePositions" in the extension "Amd".
        /// </summary>
        public static partial class Amd
        {
            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glFramebufferSamplePositionsfvAMD")]
            public static void FramebufferSamplePositions(OpenTK.Graphics.OpenGL.FramebufferTarget target, uint numsamples, uint pixelindex, float[] values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glFramebufferSamplePositionsfvAMD")]
            public static void FramebufferSamplePositions(OpenTK.Graphics.OpenGL.FramebufferTarget target, uint numsamples, uint pixelindex, ref float values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glFramebufferSamplePositionsfvAMD")]
            public static unsafe void FramebufferSamplePositions(OpenTK.Graphics.OpenGL.FramebufferTarget target, uint numsamples, uint pixelindex, float* values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// Retrieve a named parameter from a framebuffer
            /// </summary>
            /// <param name="target">
            /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
            /// </param>
            /// <param name="pname">
            /// A token indicating the parameter to be retrieved.
            /// </param>
            /// <param name="numsamples">
            /// The address of a variable to receive the value of the parameter named pname.
            /// </param>
            /// <param name="pixelindex"></param>
            /// <param name="size"></param>
            /// <param name="values"></param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetFramebufferParameterfvAMD")]
            public static void GetFramebufferParameter(OpenTK.Graphics.OpenGL.FramebufferTarget target, OpenTK.Graphics.OpenGL.FramebufferAttachmentParameterName pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float[] values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// Retrieve a named parameter from a framebuffer
            /// </summary>
            /// <param name="target">
            /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
            /// </param>
            /// <param name="pname">
            /// A token indicating the parameter to be retrieved.
            /// </param>
            /// <param name="numsamples">
            /// The address of a variable to receive the value of the parameter named pname.
            /// </param>
            /// <param name="pixelindex"></param>
            /// <param name="size"></param>
            /// <param name="values"></param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetFramebufferParameterfvAMD")]
            public static void GetFramebufferParameter(OpenTK.Graphics.OpenGL.FramebufferTarget target, OpenTK.Graphics.OpenGL.FramebufferAttachmentParameterName pname, uint numsamples, uint pixelindex, int size, [OutAttribute] out float values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// Retrieve a named parameter from a framebuffer
            /// </summary>
            /// <param name="target">
            /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
            /// </param>
            /// <param name="pname">
            /// A token indicating the parameter to be retrieved.
            /// </param>
            /// <param name="numsamples">
            /// The address of a variable to receive the value of the parameter named pname.
            /// </param>
            /// <param name="pixelindex"></param>
            /// <param name="size"></param>
            /// <param name="values"></param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetFramebufferParameterfvAMD")]
            public static unsafe void GetFramebufferParameter(OpenTK.Graphics.OpenGL.FramebufferTarget target, OpenTK.Graphics.OpenGL.FramebufferAttachmentParameterName pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float* values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetNamedFramebufferParameterfvAMD")]
            public static void GetNamedFramebufferParameter(uint framebuffer, OpenTK.Graphics.OpenGL.AmdFramebufferSamplePositions pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float[] values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetNamedFramebufferParameterfvAMD")]
            public static void GetNamedFramebufferParameter(uint framebuffer, OpenTK.Graphics.OpenGL.AmdFramebufferSamplePositions pname, uint numsamples, uint pixelindex, int size, [OutAttribute] out float values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glGetNamedFramebufferParameterfvAMD")]
            public static unsafe void GetNamedFramebufferParameter(uint framebuffer, OpenTK.Graphics.OpenGL.AmdFramebufferSamplePositions pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float* values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glNamedFramebufferSamplePositionsfvAMD")]
            public static void NamedFramebufferSamplePositions(uint framebuffer, uint numsamples, uint pixelindex, float[] values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glNamedFramebufferSamplePositionsfvAMD")]
            public static void NamedFramebufferSamplePositions(uint framebuffer, uint numsamples, uint pixelindex, ref float values)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: AMD_framebuffer_sample_positions]
            /// </summary>
            /// <param name="framebuffer">
            /// </param>
            /// <param name="numsamples">
            /// </param>
            /// <param name="pixelindex">
            /// </param>
            /// <param name="values">
            /// </param>
            [AutoGenerated(Category = "AMD_framebuffer_sample_positions", Version = "", EntryPoint = "glNamedFramebufferSamplePositionsfvAMD")]
            public static unsafe void NamedFramebufferSamplePositions(uint framebuffer, uint numsamples, uint pixelindex, float* values)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(635)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glFramebufferSamplePositionsfvAMD(OpenTK.Graphics.OpenGL.FramebufferTarget target, uint numsamples, uint pixelindex, float* values);

            [Slot(786)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetFramebufferParameterfvAMD(OpenTK.Graphics.OpenGL.FramebufferTarget target, OpenTK.Graphics.OpenGL.FramebufferAttachmentParameterName pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float* values);

            [Slot(872)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetNamedFramebufferParameterfvAMD(uint framebuffer, OpenTK.Graphics.OpenGL.AmdFramebufferSamplePositions pname, uint numsamples, uint pixelindex, int size, [OutAttribute] float* values);

            [Slot(1572)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glNamedFramebufferSamplePositionsfvAMD(uint framebuffer, uint numsamples, uint pixelindex, float* values);
        }
    }
}
