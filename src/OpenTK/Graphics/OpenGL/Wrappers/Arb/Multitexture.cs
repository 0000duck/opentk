//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "Multitexture" in the extension "Arb".
        /// </summary>
        public static partial class Arb
        {
            /// <summary>
            /// [requires: ARB_multitexture]
            /// Select active texture unit
            /// </summary>
            /// <param name="texture">
            /// Specifies which texture unit to make active. The number of texture units is implementation dependent, but must be at least 80. texture must be one of Texturei, where i ranges from zero to the value of MaxCombinedTextureImageUnits minus one. The initial value is Texture0.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glActiveTextureARB")]
            public static void ActiveTexture(OpenTK.Graphics.OpenGL.TextureUnit texture)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Select active texture unit
            /// </summary>
            /// <param name="texture">
            /// Specifies which texture unit to make active. The number of texture units is implementation dependent, but must be at least two. texture must be one of Texture, where i ranges from 0 to the value of MaxTextureCoords - 1, which is an implementation-dependent value.  The initial value is Texture0.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glClientActiveTextureARB")]
            public static void ClientActiveTexture(OpenTK.Graphics.OpenGL.TextureUnit texture)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1dARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, double s)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1dvARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1dvARB")]
            public static unsafe void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1fARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, float s)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1fvARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] ref float v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1fvARB")]
            public static unsafe void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] float* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1iARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, int s)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1ivARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] ref int v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1ivARB")]
            public static unsafe void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] int* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1sARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, short s)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1svARB")]
            public static void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] ref short v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord1svARB")]
            public static unsafe void MultiTexCoord1(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] short* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2dARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2dvARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2dvARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2dvARB")]
            public static unsafe void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2fARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2fvARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] float[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2fvARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] ref float v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2fvARB")]
            public static unsafe void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] float* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2iARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2ivARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] int[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2ivARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] ref int v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2ivARB")]
            public static unsafe void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] int* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2sARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2svARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] short[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2svARB")]
            public static void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] ref short v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord2svARB")]
            public static unsafe void MultiTexCoord2(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] short* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3dARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t, double r)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3dvARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3dvARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3dvARB")]
            public static unsafe void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3fARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t, float r)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3fvARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] float[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3fvARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] ref float v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3fvARB")]
            public static unsafe void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] float* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3iARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t, int r)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3ivARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] int[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3ivARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] ref int v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3ivARB")]
            public static unsafe void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] int* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3sARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t, short r)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3svARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] short[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3svARB")]
            public static void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] ref short v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord3svARB")]
            public static unsafe void MultiTexCoord3(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] short* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="q">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4dARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t, double r, double q)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4dvARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4dvARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4dvARB")]
            public static unsafe void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="q">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4fARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t, float r, float q)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4fvARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] float[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4fvARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] ref float v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4fvARB")]
            public static unsafe void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] float* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="q">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4iARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t, int r, int q)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4ivARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] int[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4ivARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] ref int v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4ivARB")]
            public static unsafe void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] int* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="s">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="t">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="r">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            /// <param name="q">
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4sARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t, short r, short q)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4svARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] short[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4svARB")]
            public static void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] ref short v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_multitexture]
            /// Set the current texture coordinates
            /// </summary>
            /// <param name="target">
            /// Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of Texture, where i ranges from 0 to MaxTextureCoords - 1, which is an implementation-dependent value.
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            /// </param>
            [AutoGenerated(Category = "ARB_multitexture", Version = "", EntryPoint = "glMultiTexCoord4svARB")]
            public static unsafe void MultiTexCoord4(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] short* v)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(8)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glActiveTextureARB(OpenTK.Graphics.OpenGL.TextureUnit texture);

            [Slot(185)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glClientActiveTextureARB(OpenTK.Graphics.OpenGL.TextureUnit texture);

            [Slot(1427)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord1dARB(OpenTK.Graphics.OpenGL.TextureUnit target, double s);

            [Slot(1429)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord1dvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] double* v);

            [Slot(1431)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord1fARB(OpenTK.Graphics.OpenGL.TextureUnit target, float s);

            [Slot(1433)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord1fvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] float* v);

            [Slot(1437)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord1iARB(OpenTK.Graphics.OpenGL.TextureUnit target, int s);

            [Slot(1439)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord1ivARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] int* v);

            [Slot(1441)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord1sARB(OpenTK.Graphics.OpenGL.TextureUnit target, short s);

            [Slot(1443)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord1svARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 1)] short* v);

            [Slot(1449)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord2dARB(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t);

            [Slot(1451)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord2dvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] double* v);

            [Slot(1453)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord2fARB(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t);

            [Slot(1455)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord2fvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] float* v);

            [Slot(1459)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord2iARB(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t);

            [Slot(1461)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord2ivARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] int* v);

            [Slot(1463)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord2sARB(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t);

            [Slot(1465)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord2svARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 2)] short* v);

            [Slot(1471)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord3dARB(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t, double r);

            [Slot(1473)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord3dvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] double* v);

            [Slot(1475)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord3fARB(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t, float r);

            [Slot(1477)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord3fvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] float* v);

            [Slot(1481)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord3iARB(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t, int r);

            [Slot(1483)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord3ivARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] int* v);

            [Slot(1485)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord3sARB(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t, short r);

            [Slot(1487)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord3svARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 3)] short* v);

            [Slot(1493)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord4dARB(OpenTK.Graphics.OpenGL.TextureUnit target, double s, double t, double r, double q);

            [Slot(1495)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord4dvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] double* v);

            [Slot(1497)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord4fARB(OpenTK.Graphics.OpenGL.TextureUnit target, float s, float t, float r, float q);

            [Slot(1499)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord4fvARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] float* v);

            [Slot(1503)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord4iARB(OpenTK.Graphics.OpenGL.TextureUnit target, int s, int t, int r, int q);

            [Slot(1505)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord4ivARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] int* v);

            [Slot(1507)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glMultiTexCoord4sARB(OpenTK.Graphics.OpenGL.TextureUnit target, short s, short t, short r, short q);

            [Slot(1509)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiTexCoord4svARB(OpenTK.Graphics.OpenGL.TextureUnit target, [CountAttribute(Count = 4)] short* v);
        }
    }
}
