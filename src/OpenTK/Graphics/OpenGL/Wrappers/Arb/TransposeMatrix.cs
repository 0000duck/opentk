//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "TransposeMatrix" in the extension "Arb".
        /// </summary>
        public static partial class Arb
        {
            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Replace the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Specifies a pointer to 16 consecutive values, which are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glLoadTransposeMatrixdARB")]
            public static void LoadTransposeMatrix([CountAttribute(Count = 16)] double[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Replace the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Specifies a pointer to 16 consecutive values, which are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glLoadTransposeMatrixdARB")]
            public static void LoadTransposeMatrix([CountAttribute(Count = 16)] ref double m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Replace the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Specifies a pointer to 16 consecutive values, which are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glLoadTransposeMatrixfARB")]
            public static void LoadTransposeMatrix([CountAttribute(Count = 16)] float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Replace the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Specifies a pointer to 16 consecutive values, which are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glLoadTransposeMatrixfARB")]
            public static void LoadTransposeMatrix([CountAttribute(Count = 16)] ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Multiply the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Points to 16 consecutive values that are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glMultTransposeMatrixdARB")]
            public static void MultTransposeMatrix([CountAttribute(Count = 16)] double[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Multiply the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Points to 16 consecutive values that are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glMultTransposeMatrixdARB")]
            public static void MultTransposeMatrix([CountAttribute(Count = 16)] ref double m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Multiply the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Points to 16 consecutive values that are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glMultTransposeMatrixfARB")]
            public static void MultTransposeMatrix([CountAttribute(Count = 16)] float[] m)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_transpose_matrix]
            /// Multiply the current matrix with the specified row-major ordered matrix
            /// </summary>
            /// <param name="m">
            /// [length: 16]
            /// Points to 16 consecutive values that are used as the elements of a 4  times  4 row-major matrix.
            /// </param>
            [AutoGenerated(Category = "ARB_transpose_matrix", Version = "", EntryPoint = "glMultTransposeMatrixfARB")]
            public static void MultTransposeMatrix([CountAttribute(Count = 16)] ref float m)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(1299)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glLoadTransposeMatrixdARB([CountAttribute(Count = 16)] double* m);

            [Slot(1301)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glLoadTransposeMatrixfARB([CountAttribute(Count = 16)] float* m);

            [Slot(1548)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultTransposeMatrixdARB([CountAttribute(Count = 16)] double* m);

            [Slot(1550)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultTransposeMatrixfARB([CountAttribute(Count = 16)] float* m);
        }
    }
}
