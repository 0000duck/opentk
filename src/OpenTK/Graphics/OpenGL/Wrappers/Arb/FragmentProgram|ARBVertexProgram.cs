//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "FragmentProgram|ARBVertexProgram" in the extension "Arb".
        /// </summary>
        public static partial class Arb
        {
            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="program">
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glBindProgramARB")]
            public static void BindProgram(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint program)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Deletes a program object
            /// </summary>
            /// <param name="programs">
            /// [length: n]
            /// Specifies the program object to be deleted.
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glDeleteProgramsARB")]
            public static void DeleteProgram([CountAttribute(Parameter = "n")] uint programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Deletes a program object
            /// </summary>
            /// <param name="n">
            /// Specifies the program object to be deleted.
            /// </param>
            /// <param name="programs">[length: n]</param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glDeleteProgramsARB")]
            public static void DeleteProgram(int n, [CountAttribute(Parameter = "n")] uint[] programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Deletes a program object
            /// </summary>
            /// <param name="n">
            /// Specifies the program object to be deleted.
            /// </param>
            /// <param name="programs">[length: n]</param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glDeleteProgramsARB")]
            public static void DeleteProgram(int n, [CountAttribute(Parameter = "n")] ref uint programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Deletes a program object
            /// </summary>
            /// <param name="n">
            /// Specifies the program object to be deleted.
            /// </param>
            /// <param name="programs">[length: n]</param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glDeleteProgramsARB")]
            public static unsafe void DeleteProgram(int n, [CountAttribute(Parameter = "n")] uint* programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGenProgramsARB")]
            public static uint GenProgram()
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="programs">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGenProgramsARB")]
            public static void GenProgram(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint[] programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="programs">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGenProgramsARB")]
            public static void GenProgram(int n, [OutAttribute, CountAttribute(Parameter = "n")] out uint programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="programs">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGenProgramsARB")]
            public static unsafe void GenProgram(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* programs)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterdvARB")]
            public static void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterdvARB")]
            public static void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] out double @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterdvARB")]
            public static unsafe void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterfvARB")]
            public static void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterfvARB")]
            public static void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramEnvParameterfvARB")]
            public static unsafe void GetProgramEnvParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterdvARB")]
            public static void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterdvARB")]
            public static void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] out double @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterdvARB")]
            public static unsafe void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterfvARB")]
            public static void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterfvARB")]
            public static void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramLocalParameterfvARB")]
            public static unsafe void GetProgramLocalParameter(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@string">
            /// [length: COMPSIZE(target,pname)]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramStringARB")]
            public static void GetProgramString(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [OutAttribute, CountAttribute(Computed = "target,pname")] IntPtr @string)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@string">
            /// [length: COMPSIZE(target,pname)]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramStringARB")]
            public static void GetProgramString<T2>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [InAttribute, OutAttribute, CountAttribute(Computed = "target,pname")] T2[] @string)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@string">
            /// [length: COMPSIZE(target,pname)]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramStringARB")]
            public static void GetProgramString<T2>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [InAttribute, OutAttribute, CountAttribute(Computed = "target,pname")] T2[,] @string)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@string">
            /// [length: COMPSIZE(target,pname)]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramStringARB")]
            public static void GetProgramString<T2>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [InAttribute, OutAttribute, CountAttribute(Computed = "target,pname")] T2[,,] @string)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@string">
            /// [length: COMPSIZE(target,pname)]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramStringARB")]
            public static void GetProgramString<T2>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [InAttribute, OutAttribute, CountAttribute(Computed = "target,pname")] ref T2 @string)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Returns a parameter from a program object
            /// </summary>
            /// <param name="target">
            /// Specifies the program object to be queried.
            /// </param>
            /// <param name="pname">
            /// Specifies the object parameter. Accepted symbolic names are DeleteStatus, LinkStatus, ValidateStatus, InfoLogLength, AttachedShaders, ActiveAtomicCounterBuffers, ActiveAttributes, ActiveAttributeMaxLength, ActiveUniforms, ActiveUniformBlocks, ActiveUniformBlockMaxNameLength, ActiveUniformMaxLength, ComputeWorkGroupSizeProgramBinaryLength, TransformFeedbackBufferMode, TransformFeedbackVaryings, TransformFeedbackVaryingMaxLength, GeometryVerticesOut, GeometryInputType, and GeometryOutputType.
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// Returns the requested object parameter.
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramivARB")]
            public static void GetProgram(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [OutAttribute, CountAttribute(Count = 1)] out int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Returns a parameter from a program object
            /// </summary>
            /// <param name="target">
            /// Specifies the program object to be queried.
            /// </param>
            /// <param name="pname">
            /// Specifies the object parameter. Accepted symbolic names are DeleteStatus, LinkStatus, ValidateStatus, InfoLogLength, AttachedShaders, ActiveAtomicCounterBuffers, ActiveAttributes, ActiveAttributeMaxLength, ActiveUniforms, ActiveUniformBlocks, ActiveUniformBlockMaxNameLength, ActiveUniformMaxLength, ComputeWorkGroupSizeProgramBinaryLength, TransformFeedbackBufferMode, TransformFeedbackVaryings, TransformFeedbackVaryingMaxLength, GeometryVerticesOut, GeometryInputType, and GeometryOutputType.
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// Returns the requested object parameter.
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glGetProgramivARB")]
            public static unsafe void GetProgram(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [OutAttribute, CountAttribute(Count = 1)] int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// Determines if a name corresponds to a program object
            /// </summary>
            /// <param name="program">
            /// Specifies a potential program object.
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glIsProgramARB")]
            public static bool IsProgram(uint program)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            /// <param name="w">
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4dARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, double x, double y, double z, double w)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4dvARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4dvARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] ref double @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4dvARB")]
            public static unsafe void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            /// <param name="w">
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4fARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, float x, float y, float z, float w)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4fvARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4fvARB")]
            public static void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] ref float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramEnvParameter4fvARB")]
            public static unsafe void ProgramEnvParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            /// <param name="w">
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4dARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, double x, double y, double z, double w)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4dvARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4dvARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] ref double @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4dvARB")]
            public static unsafe void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            /// <param name="w">
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4fARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, float x, float y, float z, float w)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4fvARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4fvARB")]
            public static void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] ref float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="index">
            /// </param>
            /// <param name="@params">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramLocalParameter4fvARB")]
            public static unsafe void ProgramLocalParameter4(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="len">
            /// </param>
            /// <param name="@string">
            /// [length: len]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramStringARB")]
            public static void ProgramString(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [CountAttribute(Parameter = "len")] IntPtr @string)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="len">
            /// </param>
            /// <param name="@string">
            /// [length: len]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramStringARB")]
            public static void ProgramString<T3>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [InAttribute, OutAttribute, CountAttribute(Parameter = "len")] T3[] @string)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="len">
            /// </param>
            /// <param name="@string">
            /// [length: len]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramStringARB")]
            public static void ProgramString<T3>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [InAttribute, OutAttribute, CountAttribute(Parameter = "len")] T3[,] @string)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="len">
            /// </param>
            /// <param name="@string">
            /// [length: len]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramStringARB")]
            public static void ProgramString<T3>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [InAttribute, OutAttribute, CountAttribute(Parameter = "len")] T3[,,] @string)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ARB_fragment_program|ARB_vertex_program]
            /// </summary>
            /// <param name="target">
            /// </param>
            /// <param name="format">
            /// </param>
            /// <param name="len">
            /// </param>
            /// <param name="@string">
            /// [length: len]
            /// </param>
            [AutoGenerated(Category = "ARB_fragment_program|ARB_vertex_program", Version = "", EntryPoint = "glProgramStringARB")]
            public static void ProgramString<T3>(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [InAttribute, OutAttribute, CountAttribute(Parameter = "len")] ref T3 @string)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(70)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glBindProgramARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint program);

            [Slot(425)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeleteProgramsARB(int n, [CountAttribute(Parameter = "n")] uint* programs);

            [Slot(678)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGenProgramsARB(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* programs);

            [Slot(977)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramEnvParameterdvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double* @params);

            [Slot(978)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramEnvParameterfvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float* @params);

            [Slot(986)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramLocalParameterdvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] double* @params);

            [Slot(987)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramLocalParameterfvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [OutAttribute, CountAttribute(Count = 4)] float* @params);

            [Slot(1005)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glGetProgramStringARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [OutAttribute, CountAttribute(Computed = "target,pname")] IntPtr @string);

            [Slot(984)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetProgramivARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramParameterArb pname, [OutAttribute, CountAttribute(Count = 1)] int* @params);

            [Slot(1240)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsProgramARB(uint program);

            [Slot(1741)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glProgramEnvParameter4dARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, double x, double y, double z, double w);

            [Slot(1742)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glProgramEnvParameter4dvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double* @params);

            [Slot(1743)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glProgramEnvParameter4fARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, float x, float y, float z, float w);

            [Slot(1744)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glProgramEnvParameter4fvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float* @params);

            [Slot(1752)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glProgramLocalParameter4dARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, double x, double y, double z, double w);

            [Slot(1753)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glProgramLocalParameter4dvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] double* @params);

            [Slot(1754)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glProgramLocalParameter4fARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, float x, float y, float z, float w);

            [Slot(1755)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glProgramLocalParameter4fvARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, uint index, [CountAttribute(Count = 4)] float* @params);

            [Slot(1777)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glProgramStringARB(OpenTK.Graphics.OpenGL.AssemblyProgramTargetArb target, OpenTK.Graphics.OpenGL.AssemblyProgramFormatArb format, int len, [CountAttribute(Parameter = "len")] IntPtr @string);
        }
    }
}
