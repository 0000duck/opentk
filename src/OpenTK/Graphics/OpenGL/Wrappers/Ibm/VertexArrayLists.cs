//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "VertexArrayLists" in the extension "Ibm".
        /// </summary>
        public static partial class Ibm
        {
            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glColorPointerListIBM")]
            public static void ColorPointerList(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glColorPointerListIBM")]
            public static void ColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glColorPointerListIBM")]
            public static void ColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glColorPointerListIBM")]
            public static void ColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glColorPointerListIBM")]
            public static void ColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] ref T3 pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glEdgeFlagPointerListIBM")]
            public static unsafe void EdgeFlagPointerList(int stride, [CountAttribute(Computed = "stride")] bool*[] pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glEdgeFlagPointerListIBM")]
            public static unsafe void EdgeFlagPointerList(int stride, [CountAttribute(Computed = "stride")] ref bool* pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glEdgeFlagPointerListIBM")]
            public static unsafe void EdgeFlagPointerList(int stride, [CountAttribute(Computed = "stride")] bool** pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glFogCoordPointerListIBM")]
            public static void FogCoordPointerList(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glFogCoordPointerListIBM")]
            public static void FogCoordPointerList<T2>(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glFogCoordPointerListIBM")]
            public static void FogCoordPointerList<T2>(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glFogCoordPointerListIBM")]
            public static void FogCoordPointerList<T2>(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glFogCoordPointerListIBM")]
            public static void FogCoordPointerList<T2>(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] ref T2 pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glIndexPointerListIBM")]
            public static void IndexPointerList(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glIndexPointerListIBM")]
            public static void IndexPointerList<T2>(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glIndexPointerListIBM")]
            public static void IndexPointerList<T2>(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glIndexPointerListIBM")]
            public static void IndexPointerList<T2>(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glIndexPointerListIBM")]
            public static void IndexPointerList<T2>(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] ref T2 pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glNormalPointerListIBM")]
            public static void NormalPointerList(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glNormalPointerListIBM")]
            public static void NormalPointerList<T2>(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glNormalPointerListIBM")]
            public static void NormalPointerList<T2>(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glNormalPointerListIBM")]
            public static void NormalPointerList<T2>(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] T2[,,] pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glNormalPointerListIBM")]
            public static void NormalPointerList<T2>(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "type,stride")] ref T2 pointer, int ptrstride)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glSecondaryColorPointerListIBM")]
            public static void SecondaryColorPointerList(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glSecondaryColorPointerListIBM")]
            public static void SecondaryColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glSecondaryColorPointerListIBM")]
            public static void SecondaryColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glSecondaryColorPointerListIBM")]
            public static void SecondaryColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glSecondaryColorPointerListIBM")]
            public static void SecondaryColorPointerList<T3>(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] ref T3 pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glTexCoordPointerListIBM")]
            public static void TexCoordPointerList(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glTexCoordPointerListIBM")]
            public static void TexCoordPointerList<T3>(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glTexCoordPointerListIBM")]
            public static void TexCoordPointerList<T3>(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glTexCoordPointerListIBM")]
            public static void TexCoordPointerList<T3>(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glTexCoordPointerListIBM")]
            public static void TexCoordPointerList<T3>(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] ref T3 pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glVertexPointerListIBM")]
            public static void VertexPointerList(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glVertexPointerListIBM")]
            public static void VertexPointerList<T3>(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glVertexPointerListIBM")]
            public static void VertexPointerList<T3>(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glVertexPointerListIBM")]
            public static void VertexPointerList<T3>(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] T3[,,] pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: IBM_vertex_array_lists]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: COMPSIZE(size,type,stride)]
            /// </param>
            /// <param name="ptrstride">
            /// </param>
            [AutoGenerated(Category = "IBM_vertex_array_lists", Version = "", EntryPoint = "glVertexPointerListIBM")]
            public static void VertexPointerList<T3>(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Computed = "size,type,stride")] ref T3 pointer, int ptrstride)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(255)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glColorPointerListIBM(int size, OpenTK.Graphics.OpenGL.ColorPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride);

            [Slot(518)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glEdgeFlagPointerListIBM(int stride, [CountAttribute(Computed = "stride")] bool** pointer, int ptrstride);

            [Slot(605)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glFogCoordPointerListIBM(OpenTK.Graphics.OpenGL.FogPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride);

            [Slot(1194)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glIndexPointerListIBM(OpenTK.Graphics.OpenGL.IndexPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride);

            [Slot(1622)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glNormalPointerListIBM(OpenTK.Graphics.OpenGL.NormalPointerType type, int stride, [CountAttribute(Computed = "type,stride")] IntPtr pointer, int ptrstride);

            [Slot(2087)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glSecondaryColorPointerListIBM(int size, OpenTK.Graphics.OpenGL.IbmVertexArrayLists type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride);

            [Slot(2247)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glTexCoordPointerListIBM(int size, OpenTK.Graphics.OpenGL.TexCoordPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride);

            [Slot(2833)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexPointerListIBM(int size, OpenTK.Graphics.OpenGL.VertexPointerType type, int stride, [CountAttribute(Computed = "size,type,stride")] IntPtr pointer, int ptrstride);
        }
    }
}
