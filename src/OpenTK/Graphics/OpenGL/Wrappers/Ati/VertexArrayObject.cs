//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "VertexArrayObject" in the extension "Ati".
        /// </summary>
        public static partial class Ati
        {
            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="array">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glArrayObjectATI")]
            public static void ArrayObject(OpenTK.Graphics.OpenGL.EnableCap array, int size, OpenTK.Graphics.OpenGL.AtiVertexArrayObject type, int stride, uint buffer, uint offset)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glFreeObjectBufferATI")]
            public static void FreeObjectBuffer(uint buffer)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="array">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetArrayObjectfvATI")]
            public static void GetArrayObject(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="array">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetArrayObjectfvATI")]
            public static unsafe void GetArrayObject(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="array">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetArrayObjectivATI")]
            public static void GetArrayObject(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="array">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetArrayObjectivATI")]
            public static unsafe void GetArrayObject(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetObjectBufferfvATI")]
            public static void GetObjectBuffer(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetObjectBufferfvATI")]
            public static unsafe void GetObjectBuffer(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetObjectBufferivATI")]
            public static void GetObjectBuffer(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetObjectBufferivATI")]
            public static unsafe void GetObjectBuffer(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="id">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetVariantArrayObjectfvATI")]
            public static void GetVariantArrayObject(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out float @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="id">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetVariantArrayObjectfvATI")]
            public static unsafe void GetVariantArrayObject(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="id">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetVariantArrayObjectivATI")]
            public static void GetVariantArrayObject(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] out int @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="id">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glGetVariantArrayObjectivATI")]
            public static unsafe void GetVariantArrayObject(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glIsObjectBufferATI")]
            public static bool IsObjectBuffer(uint buffer)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="usage">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glNewObjectBufferATI")]
            public static uint NewObjectBuffer(int size, [CountAttribute(Parameter = "size")] IntPtr pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="usage">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glNewObjectBufferATI")]
            public static uint NewObjectBuffer<T1>(int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T1[] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="usage">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glNewObjectBufferATI")]
            public static uint NewObjectBuffer<T1>(int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T1[,] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="usage">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glNewObjectBufferATI")]
            public static uint NewObjectBuffer<T1>(int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T1[,,] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="usage">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glNewObjectBufferATI")]
            public static uint NewObjectBuffer<T1>(int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] ref T1 pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage)
                where T1 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="preserve">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glUpdateObjectBufferATI")]
            public static void UpdateObjectBuffer(uint buffer, uint offset, int size, [CountAttribute(Parameter = "size")] IntPtr pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="preserve">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glUpdateObjectBufferATI")]
            public static void UpdateObjectBuffer<T3>(uint buffer, uint offset, int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T3[] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="preserve">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glUpdateObjectBufferATI")]
            public static void UpdateObjectBuffer<T3>(uint buffer, uint offset, int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T3[,] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="preserve">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glUpdateObjectBufferATI")]
            public static void UpdateObjectBuffer<T3>(uint buffer, uint offset, int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T3[,,] pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            /// <param name="preserve">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glUpdateObjectBufferATI")]
            public static void UpdateObjectBuffer<T3>(uint buffer, uint offset, int size, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] ref T3 pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: ATI_vertex_array_object]
            /// </summary>
            /// <param name="id">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="buffer">
            /// </param>
            /// <param name="offset">
            /// </param>
            [AutoGenerated(Category = "ATI_vertex_array_object", Version = "", EntryPoint = "glVariantArrayObjectATI")]
            public static void VariantArrayObject(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject type, int stride, uint buffer, uint offset)
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(23)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glArrayObjectATI(OpenTK.Graphics.OpenGL.EnableCap array, int size, OpenTK.Graphics.OpenGL.AtiVertexArrayObject type, int stride, uint buffer, uint offset);

            [Slot(653)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glFreeObjectBufferATI(uint buffer);

            [Slot(708)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetArrayObjectfvATI(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params);

            [Slot(709)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetArrayObjectivATI(OpenTK.Graphics.OpenGL.EnableCap array, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params);

            [Slot(927)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetObjectBufferfvATI(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params);

            [Slot(928)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetObjectBufferivATI(uint buffer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params);

            [Slot(1112)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetVariantArrayObjectfvATI(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] float* @params);

            [Slot(1113)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetVariantArrayObjectivATI(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject pname, [OutAttribute, CountAttribute(Count = 1)] int* @params);

            [Slot(1234)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsObjectBufferATI(uint buffer);

            [Slot(1600)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern uint glNewObjectBufferATI(int size, [CountAttribute(Parameter = "size")] IntPtr pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject usage);

            [Slot(2495)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glUpdateObjectBufferATI(uint buffer, uint offset, int size, [CountAttribute(Parameter = "size")] IntPtr pointer, OpenTK.Graphics.OpenGL.AtiVertexArrayObject preserve);

            [Slot(2505)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVariantArrayObjectATI(uint id, OpenTK.Graphics.OpenGL.AtiVertexArrayObject type, int stride, uint buffer, uint offset);
        }
    }
}
