//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "VertexAttrib64bit" in the extension "Ext".
        /// </summary>
        public static partial class Ext
        {
            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glGetVertexAttribLdvEXT")]
            public static void GetVertexAttribL(uint index, OpenTK.Graphics.OpenGL.VertexAttribEnum pname, [OutAttribute, CountAttribute(Computed = "pname")] double[] @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glGetVertexAttribLdvEXT")]
            public static void GetVertexAttribL(uint index, OpenTK.Graphics.OpenGL.VertexAttribEnum pname, [OutAttribute, CountAttribute(Computed = "pname")] out double @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="pname">
            /// </param>
            /// <param name="@params">
            /// [length: COMPSIZE(pname)]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glGetVertexAttribLdvEXT")]
            public static unsafe void GetVertexAttribL(uint index, OpenTK.Graphics.OpenGL.VertexAttribEnum pname, [OutAttribute, CountAttribute(Computed = "pname")] double* @params)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL1dEXT")]
            public static void VertexAttribL1(uint index, double x)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL1dvEXT")]
            public static void VertexAttribL1(uint index, [CountAttribute(Count = 1)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 1]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL1dvEXT")]
            public static unsafe void VertexAttribL1(uint index, [CountAttribute(Count = 1)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL2dEXT")]
            public static void VertexAttribL2(uint index, double x, double y)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL2dvEXT")]
            public static void VertexAttribL2(uint index, [CountAttribute(Count = 2)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL2dvEXT")]
            public static void VertexAttribL2(uint index, [CountAttribute(Count = 2)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 2]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL2dvEXT")]
            public static unsafe void VertexAttribL2(uint index, [CountAttribute(Count = 2)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL3dEXT")]
            public static void VertexAttribL3(uint index, double x, double y, double z)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL3dvEXT")]
            public static void VertexAttribL3(uint index, [CountAttribute(Count = 3)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL3dvEXT")]
            public static void VertexAttribL3(uint index, [CountAttribute(Count = 3)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 3]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL3dvEXT")]
            public static unsafe void VertexAttribL3(uint index, [CountAttribute(Count = 3)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="x">
            /// </param>
            /// <param name="y">
            /// </param>
            /// <param name="z">
            /// </param>
            /// <param name="w">
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL4dEXT")]
            public static void VertexAttribL4(uint index, double x, double y, double z, double w)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL4dvEXT")]
            public static void VertexAttribL4(uint index, [CountAttribute(Count = 4)] double[] v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL4dvEXT")]
            public static void VertexAttribL4(uint index, [CountAttribute(Count = 4)] ref double v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="v">
            /// [length: 4]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribL4dvEXT")]
            public static unsafe void VertexAttribL4(uint index, [CountAttribute(Count = 4)] double* v)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribLPointerEXT")]
            public static void VertexAttribLPointer(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [CountAttribute(Parameter = "size")] IntPtr pointer)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribLPointerEXT")]
            public static void VertexAttribLPointer<T4>(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T4[] pointer)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribLPointerEXT")]
            public static void VertexAttribLPointer<T4>(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T4[,] pointer)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribLPointerEXT")]
            public static void VertexAttribLPointer<T4>(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] T4[,,] pointer)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_vertex_attrib_64bit]
            /// </summary>
            /// <param name="index">
            /// </param>
            /// <param name="size">
            /// </param>
            /// <param name="type">
            /// </param>
            /// <param name="stride">
            /// </param>
            /// <param name="pointer">
            /// [length: size]
            /// </param>
            [AutoGenerated(Category = "EXT_vertex_attrib_64bit", Version = "", EntryPoint = "glVertexAttribLPointerEXT")]
            public static void VertexAttribLPointer<T4>(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [InAttribute, OutAttribute, CountAttribute(Parameter = "size")] ref T4 pointer)
                where T4 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(1142)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glGetVertexAttribLdvEXT(uint index, OpenTK.Graphics.OpenGL.VertexAttribEnum pname, [OutAttribute, CountAttribute(Computed = "pname")] double* @params);

            [Slot(2754)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexAttribL1dEXT(uint index, double x);

            [Slot(2756)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glVertexAttribL1dvEXT(uint index, [CountAttribute(Count = 1)] double* v);

            [Slot(2764)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexAttribL2dEXT(uint index, double x, double y);

            [Slot(2766)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glVertexAttribL2dvEXT(uint index, [CountAttribute(Count = 2)] double* v);

            [Slot(2772)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexAttribL3dEXT(uint index, double x, double y, double z);

            [Slot(2774)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glVertexAttribL3dvEXT(uint index, [CountAttribute(Count = 3)] double* v);

            [Slot(2780)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexAttribL4dEXT(uint index, double x, double y, double z, double w);

            [Slot(2782)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glVertexAttribL4dvEXT(uint index, [CountAttribute(Count = 4)] double* v);

            [Slot(2790)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glVertexAttribLPointerEXT(uint index, int size, OpenTK.Graphics.OpenGL.VertexAttribPointerType type, int stride, [CountAttribute(Parameter = "size")] IntPtr pointer);
        }
    }
}
