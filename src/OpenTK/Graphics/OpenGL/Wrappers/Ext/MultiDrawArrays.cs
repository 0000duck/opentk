//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "MultiDrawArrays" in the extension "Ext".
        /// </summary>
        public static partial class Ext
        {
            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives from array data
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="first">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of starting indices in the enabled arrays.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the number of indices to be rendered.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the first and count
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawArraysEXT")]
            public static void MultiDrawArrays(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] first, [CountAttribute(Computed = "primcount")] int[] count, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives from array data
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="first">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of starting indices in the enabled arrays.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the number of indices to be rendered.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the first and count
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawArraysEXT")]
            public static void MultiDrawArrays(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int first, [CountAttribute(Computed = "primcount")] ref int count, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives from array data
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="first">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of starting indices in the enabled arrays.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the number of indices to be rendered.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the first and count
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawArraysEXT")]
            public static unsafe void MultiDrawArrays(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* first, [CountAttribute(Computed = "primcount")] int* count, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] count, OpenTK.Graphics.OpenGL.DrawElementsType type, [CountAttribute(Computed = "primcount")] IntPtr indices, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int[] count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] ref T3 indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int count, OpenTK.Graphics.OpenGL.DrawElementsType type, [CountAttribute(Computed = "primcount")] IntPtr indices, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] ref int count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] ref T3 indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static unsafe void MultiDrawElements(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [CountAttribute(Computed = "primcount")] IntPtr indices, int primcount)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static unsafe void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static unsafe void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static unsafe void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] T3[,,] indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: EXT_multi_draw_arrays]
            /// Render multiple sets of primitives by specifying indices of array data elements
            /// </summary>
            /// <param name="mode">
            /// Specifies what kind of primitives to render. Symbolic constants Points, LineStrip, LineLoop, Lines, LineStripAdjacency, LinesAdjacency, TriangleStrip, TriangleFan, Triangles, TriangleStripAdjacency, TrianglesAdjacency and Patches are accepted.
            /// </param>
            /// <param name="count">
            /// [length: COMPSIZE(primcount)]
            /// Points to an array of the elements counts.
            /// </param>
            /// <param name="type">
            /// Specifies the type of the values in indices. Must be one of UnsignedByte, UnsignedShort, or UnsignedInt.
            /// </param>
            /// <param name="indices">
            /// [length: COMPSIZE(primcount)]
            /// Specifies a pointer to the location where the indices are stored.
            /// </param>
            /// <param name="primcount">
            /// Specifies the size of the count and indices arrays.
            /// </param>
            [AutoGenerated(Category = "EXT_multi_draw_arrays", Version = "", EntryPoint = "glMultiDrawElementsEXT")]
            public static unsafe void MultiDrawElements<T3>(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [InAttribute, OutAttribute, CountAttribute(Computed = "primcount")] ref T3 indices, int primcount)
                where T3 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            [Slot(1403)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiDrawArraysEXT(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* first, [CountAttribute(Computed = "primcount")] int* count, int primcount);

            [Slot(1413)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glMultiDrawElementsEXT(OpenTK.Graphics.OpenGL.PrimitiveType mode, [CountAttribute(Computed = "primcount")] int* count, OpenTK.Graphics.OpenGL.DrawElementsType type, [CountAttribute(Computed = "primcount")] IntPtr indices, int primcount);
        }
    }
}
