<?xml version="1.0" encoding="utf-8"?>
<assembly name="Convert">
  <member name="M:Generator.Convert.Construction.NativeIdentifierTranslator.TranslateIdentifierName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.GetSignatureRoot(System.Xml.Linq.XDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="signatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseCountSignature(System.String,System.Boolean@,System.Collections.Generic.IReadOnlyList{System.String}@,System.Boolean@,System.String@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>hasComputedCount : true =&gt; computedCountParameterNames : notnull; hasValueReference : true =&gt; valueReferenceName : notnull</argument>
    </attribute>
    <parameter name="countData">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="computedCountParameterNames">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueReferenceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueReferenceExpression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseTokenSignature(System.Xml.Linq.XElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tokenElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseTypeSignature(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseTypeSignature(System.Xml.Linq.XElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseVersion(System.String,System.Version)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>defaultVersion : null =&gt; canbenull; defaultVersion : notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="versionString">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ParseVersion(System.Xml.Linq.XElement,System.String,System.Version)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>defaultVersion : null =&gt; canbenull; defaultVersion : notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ResolveComputedCountSignatures(System.Collections.Generic.IReadOnlyCollection{Generator.Common.Functions.Parameter},System.Collections.Generic.IEnumerable{System.ValueTuple{Generator.Common.Functions.Parameter,System.Collections.Generic.IReadOnlyList{System.String}}})">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parametersWithComputedCounts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.ParsingHelpers.ResolveReferenceCountSignatures(System.Collections.Generic.IReadOnlyCollection{Generator.Common.Functions.Parameter},System.Collections.Generic.IEnumerable{System.ValueTuple{Generator.Common.Functions.Parameter,System.String}})">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parametersWithValueReferenceCounts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.Trimmers.ITrimmer`1.IsRelevant(`0)">
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Construction.Trimmers.ITrimmer`1.Trim(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="trimmable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Overrides.ApiProfileOverride.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Generator.Convert.Overrides.Enumerations.EnumerationOverride},System.Collections.Generic.IReadOnlyList{Generator.Convert.Overrides.Functions.FunctionOverride})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addedEnumerations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacedFunctions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.ApiProfileOverride.AddedEnumerations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.ApiProfileOverride.FunctionOverloads">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.ApiProfileOverride.ReplacedFunctions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Enumerations.EnumerationOverride.#ctor(System.String,System.Collections.Generic.List{Generator.Common.Enums.Token},System.Collections.Generic.IReadOnlyList{Generator.Convert.Overrides.Enumerations.UseTokenOverride},System.Collections.Generic.IReadOnlyList{Generator.Convert.Overrides.Enumerations.ReuseEnumerationOverride})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directTokens">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="useTokens">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reuseEnumerations">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.EnumerationOverride.DirectTokens">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.EnumerationOverride.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.EnumerationOverride.ReuseEnumerations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.EnumerationOverride.UseTokens">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Enumerations.ReuseEnumerationOverride.#ctor(System.String)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.ReuseEnumerationOverride.Enumeration">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Enumerations.UseTokenOverride.#ctor(System.String,System.String)">
    <parameter name="token">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.UseTokenOverride.Enumeration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Enumerations.UseTokenOverride.Token">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Functions.FunctionOverride.#ctor(System.String,System.String,System.String,System.String,Generator.Common.Functions.Type,System.Collections.Generic.IReadOnlyList{Generator.Convert.Overrides.Functions.ParameterOverride})">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseExtension">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obsoletionReason">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newReturnType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterOverrides">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.BaseExtension">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.BaseName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Functions.FunctionOverride.HasSameSignatureAs(Generator.Convert.Overrides.Functions.FunctionOverride)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.NewReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.NewVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.ObsoletionReason">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.FunctionOverride.ParameterOverrides">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.Functions.ParameterOverride.#ctor(System.String,System.String,Generator.Common.Functions.Type,System.Nullable{Generator.Common.Functions.FlowDirection},System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="newCount">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.ParameterOverride.BaseName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.ParameterOverride.NewCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.ParameterOverride.NewFlow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.ParameterOverride.NewName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Generator.Convert.Overrides.Functions.ParameterOverride.NewType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Generator.Convert.Overrides.OverrideReader.GetProfileOverrides(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="overrideFilePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Overrides.OverrideReader.GetProfileOverrides(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="overrideFilePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.Overrides.OverrideReader.GetProfileOverrides(System.Xml.Linq.XDocument[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="signatureDocuments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.XML.XContainerExtensions.GetRequiredElement(System.Xml.Linq.XContainer,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.XML.XContainerExtensions.GetRequiredElements(System.Xml.Linq.XContainer,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.XML.XContainerExtensions.GetRequiredSectionByClass(System.Xml.Linq.XContainer,System.String,System.String)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.XML.XContainerExtensions.GetRequiredSectionsByClass(System.Xml.Linq.XContainer,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Generator.Convert.XML.XElementExtensions.GetRequiredAttribute(System.Xml.Linq.XElement,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>